<?xml version="1.0"?>
<testsuites>
  <testsuite name="Firefox 64.0.0 (Ubuntu 0.0.0)" package="unit" timestamp="2018-12-17T12:29:35" id="0" hostname="proshanto" tests="2356" errors="0" failures="0" time="23.288">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0"/>
    </properties>
    <testcase name="should provide audit log after initialization" time="0.056" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should gives audit logs from given date" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should provide previous logs from given index" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should display warning message when there is no event after initialization" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should provide next logs from given index" time="0.034" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should display warning if not event found" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should take today&apos;s date as default date during initialization" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should display warning and set default index if there is no event found after pressed prev button" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should display warning if there is no event found after pressed next button again and again" time="0.04" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should not update present logs if no logs found" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should replace logs when user use run report to show logs" time="0.038" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should not send if filter values is empty" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should give all logs filter by given username" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should give all logs filter by given patient identifier" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should give all logs filter by given patient identifier and username" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should not run report if given date field has future date" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogController"/>
    <testcase name="should add new dummy orderSetMember" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderSetController"/>
    <testcase name="should retire already saved orderSetMember" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderSetController"/>
    <testcase name="should remove newly added orderSetMember" time="0.05" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderSetController"/>
    <testcase name="should set concept uuid on selecting the concept by pressing down key and enter button" time="0.066" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderSetController"/>
    <testcase name="shouldn&apos;t through any exception if the orderSetMember model value doesn&apos;t match the concept display in orderSetMembers" time="0.053" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderSetController"/>
    <testcase name="service should retrieve" time="0.302" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).adminImportService"/>
    <testcase name="Should show confirmation dialog if patient&apos;s visit type is not defaultVisitType" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should not show confirmation dialog if patient&apos;s visit type is defaultVisitType" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should close the visit and create a new encounter if dialog is confirmed" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should close the confirmation dialog if cancelled" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should create an encounter with in the current visit if continued" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should not create encounter with in the current visit if closed" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should show an error message and not close the current visit when defaultVisitType is not configured and yet the user decides to close the current visit and create a new visit of type defaultVisitType" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should show an error message when defaultVisitType is not configured and patient doesn&apos;t have any visit open while admitting" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Admit Patient action if the patient is discharged the visit has closed" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Undo Discharge action if the patient is discharged and visit is open" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Discharge Patient and Transfer Patient action if the patient is admitted" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Admit Patient action if the patient is not admitted in given visit" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should discharge patient and log the encounter when audit log is enabled" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController Discharge"/>
    <testcase name="should call the ward service to retrieve the ward list" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController initialization of controller with bedDetails on rootScope undefined"/>
    <testcase name="should reload if bed assigment changes" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController watch"/>
    <testcase name="should remember the state in user prefs during toggle state" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should toggle ward view" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should assign bed to the patient" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardLayoutController assignBed"/>
    <testcase name="should highlight for assignable view" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardLayoutController highlightCurrentPatient"/>
    <testcase name="should not highlight for readonly view" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardLayoutController highlightCurrentPatient"/>
    <testcase name="should not highlight for any other bed" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardLayoutController highlightCurrentPatient"/>
    <testcase name="should set the bed details in scope" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardLayoutController setBedDetails"/>
    <testcase name="Should go to patient dashboard" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardListController"/>
    <testcase name="should call the ward service to retrieve the ward list" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardsController"/>
    <testcase name="should group all diagnosis for a patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardDetails create"/>
    <testcase name="should remove duplicate diagnosis if one of them is marked as ruled out" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardDetails create"/>
    <testcase name="should add patientUuid and VisitUuid as hiddenAttributes" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardDetails create"/>
    <testcase name="service should retrieve" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Query Service"/>
    <testcase name="should create grid layout" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedManagementService createLayoutGrid"/>
    <testcase name="service should retrieve beds for ward" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Ward Service"/>
    <testcase name="service should get wards list" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Ward Service"/>
    <testcase name="should return transfer encounter type uuid if the visit has admission details and no discharge details." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionDisplayUtil getEncounterToDisplay"/>
    <testcase name="should return admission encounter type if visit has no admission details." time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionDisplayUtil getEncounterToDisplay"/>
    <testcase name="should return discharge encounter type if the visit has dischargeDetails" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionDisplayUtil getEncounterToDisplay"/>
    <testcase name="should fetch all locations,services,provider,specialities on initialization" time="0.058" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentConfigInitialization"/>
    <testcase name="should not include retired providers in providers list" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentConfigInitialization"/>
    <testcase name="should not fetch specialities if not configured" time="0.033" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentConfigInitialization"/>
    <testcase name="should fetch selectedService if there is service" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentConfigInitialization"/>
    <testcase name="should not fetch selectedService if there is no service" time="0.04" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentConfigInitialization"/>
    <testcase name="should return empty object if stateParams is Empty" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentInitialization"/>
    <testcase name="should return appointment object if stateParams has appointment" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentInitialization"/>
    <testcase name="should return appointment if stateParams has uuid" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentInitialization"/>
    <testcase name="should get all existing services" time="0.041" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentServicesController"/>
    <testcase name="should open dialog for deleting appointmentservice" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentServicesController"/>
    <testcase name="should fetch all appointment locations on initialization" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController initialization"/>
    <testcase name="should have default color for appointment service type" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController initialization"/>
    <testcase name="should not fetch specialities if not configured" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController initialization"/>
    <testcase name="should fetch all specialities on initialization if configured" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController initialization"/>
    <testcase name="should fetch all services on initialization" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController initialization"/>
    <testcase name="should validate to true if service name is unique" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController validateServiceName"/>
    <testcase name="should validate to false if service name is already exists" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController validateServiceName"/>
    <testcase name="should validate to false if case insensitive service name is exists" time="0.073" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController validateServiceName"/>
    <testcase name="should validate to true if service name is empty" time="0.046" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController validateServiceName"/>
    <testcase name="should not compare with itself on edit" time="0.037" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController validateServiceName"/>
    <testcase name="should clear incorrect service start and end time and maxLoad if at least one weeklyAvailability is added" time="0.054" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save clear incorrect data"/>
    <testcase name="should clear service maxLoad if at least one service type is added" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save clear incorrect data"/>
    <testcase name="should not clear service level incorrect start and end time and maxLoad if weeklyAvailability is empty" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save clear incorrect data"/>
    <testcase name="should not clear service maxLoad if no service type is added" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save clear incorrect data"/>
    <testcase name="should save all appointment service details" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save"/>
    <testcase name="should go to service list page after save" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save"/>
    <testcase name="should show error message if form is invalid" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save"/>
    <testcase name="should save all appointment service details only if confirmed on edit" time="0.072" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save"/>
    <testcase name="should not call save if cancelled on edit" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController save"/>
    <testcase name="should open confirmation dialog if we change the state" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController confirmationDialogOnStateChange"/>
    <testcase name="should stay in current state if Cancel is selected" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController confirmationDialogOnStateChange"/>
    <testcase name="should not save and go to target state if Don&apos;t save is selected" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceController confirmationDialogOnStateChange"/>
    <testcase name="should close the dialog when appointment service throws an error" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).deleteAppointmentServiceController"/>
    <testcase name="should delete the appointment service on confirmation" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).deleteAppointmentServiceController"/>
    <testcase name="should close the dialog on cancel" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).deleteAppointmentServiceController"/>
    <testcase name="should add all backlinks if configured on initialization" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsHeaderController"/>
    <testcase name="should not add admin link if not configured" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsHeaderController"/>
    <testcase name="should initialize enable calendar view from config" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentsController"/>
    <testcase name="should navigate to calendar view if calendar button in pressed" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentsController"/>
    <testcase name="should navigate to list view if list button is pressed" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentsController"/>
    <testcase name="should get tabName from state.current" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllAppointmentsController"/>
    <testcase name="should init appointment with defaultAppointmentKind if there is no appointment in appointmentContext" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should init appointment with appointment in appointmentContext" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should set service details on serviceChange" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should set default duration if service duration does not exist on serviceChange" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should set the isFilterOpen from state params" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController confirmationDialogOnStateChange"/>
    <testcase name="should stay in current state if Cancel is selected" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController confirmationDialogOnStateChange"/>
    <testcase name="should go to previous view with appointment date after saving the appointment" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController confirmationDialogOnStateChange"/>
    <testcase name="should not check for conflicts with itself(same uuid), when editing an appointment" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not check for conflicts with cancelled appointments" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not conflict when the same patient has another appointment at end time of previous appointment" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should initialize patientAppointments, if an appointment is editing" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set the warning message when start time is same as the start time of service availability" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set the warning message when start time is before the service end time" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should set the warning message when start time is outside the service available time" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should set the warning message when start time is outside the service available time and multiple service available times are defined for a day" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set the warning message when start time is within the second service available time and multiple service available times are defined for a day" time="0.033" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set warning on start time when the service availability is not defined for a given day" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should reset the warning on start time to false when start time is undefined" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set the warning message when end time is inside the service availability" time="0.118" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should set the warning on end time when it is outside the service availability" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should reset the warning on day to false if appointment date is undefined" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not set warning on a day and set default start and end times when the service weekly availability is not defined for a given day" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should set warning on a day and allowedStartTime and allowedEndTime to undefined when the service availability is not defined for a given day" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should remove warning on a day and set allowedStartTime and allowedEndTime when the service availability is defined for a given day" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should calculate warning messages for start time and end time when appointment date is changed" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should validate and set allowedStartTime and allowedEndTime when service weeklyAvailability is not defined but service start time and end time are defined" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should reset availability warnings when a service is selected" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should reset availability warnings when a service type is selected" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should not include endTime value in startTimeSlots and startTime value should not be included in endTimeSlots" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should get all slots for weekly availability" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should get empty slots when there is weekly availability but not for the given appointment day" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController availabilityValidations"/>
    <testcase name="should trigger load calculation on date change" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should trigger load calculation on time change" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should not trigger load calculation on time change when service types are defined" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should not trigger load calculation on time change when timings are out of service availability" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should clear the existing slot info" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should assign currentLoad and maxAppointmentsLimit" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should only assign currentLoad of that day if no duration,startTime&amp;endTime,maxAppointmentsLimit present" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should calculate maxAppointmentsLimit from service duration,start&amp;endTime if service maxAppointmentsLimit is empty" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should assign currentLoad and maxAppointmentsLimit of availability" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should calculate maxAppointmentsLimit from service duration and availability start&amp;endTime if availability maxAppointmentsLimit is empty" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should not calculate slot info if appointment is booked outside the availability" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="outOfRange should be true when selected date having more than one availability slots, and startTime and endTime are not in one slot" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="outOfRange should be false when there is no weekly service and appointmentDate, startTime, endTime are false" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController loadCalculation"/>
    <testcase name="should navigate to previous state" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should not allow edit if it is past appointment irrespective of status" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should allow edit for scheduled appointment if is of current date" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should allow edit for checked-in appointment if is of current date" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should not allow edit for completed appointment if is of current date" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should not allow edit for cancelled appointment if is of current date" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should allow edit for scheduled appointment if is of future date" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should allow edit for checked-in appointment if is of future date" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should not allow edit for completed appointment if is of future date" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should not allow edit for cancelled appointment if is of future date" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController isEditAllowed"/>
    <testcase name="should call patient service when there is no url defined " time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController searchPatient"/>
    <testcase name="should call the url specified in the config for patient search" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController searchPatient"/>
    <testcase name="should retain previous minDuration when service type is unselected" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should dropDown have times list which are having entered number in hours of the allowed list" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should dropDown have all the allowed time list when the entered number is not in hours of the allowed list" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should include appointment provider if the provider is not available in all available providers" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should not affect the all providers when new appointment has created" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCreateController"/>
    <testcase name="should get tabName from state.current" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should map specialities to ivh tree" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should map selected services to state params" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should set service types to state params" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should select service types only when the service is not selected" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should reset ivh Tree, reset the filter and apply them on appointments" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should get providers, statusList and specialities" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should preselect the services to filter when services are not empty in filterParams" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should set the selectedStatusList" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should return false when filters are empty without serviceUuids, serviceTypeUuids and providerUuids" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should return false when filters are empty" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should return true when filters are not empty" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should filter all the selected services when clicked on show selected toggle" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should show all the service when clicked on all toggle" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should set state params when filter is expanded" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should reset state params when filter is minimized" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="if calender is open then statusList should not include cancelled" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should remove cancel status from statusList and selectedStatusList when user navigates to calendar view from list view" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should set statusList to default statusList when user navigates to list view from calender view" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should have &quot;No Provider&quot; in providers and should have providerUuids in selectedProviders when providerUuids are present in filterParams" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should reset searchText to undefined" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should have isSpecialitiesEnable and isServiceTypeEnabled" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not inclued specialities in ivhTreeView when specialities are not enabled" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not inclued specialities in ivhTreeView when specialities are not enabled" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not inclued serviceTypes and should include specialities in ivhTreeView when service types are not enabled and specialities are enabled" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should inclued serviceTypes and specialities in ivhTreeView when service types and specialities are enabled" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not inclued specialities in ivhTreeView when specialities are not enabled" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not include specialities and service types in ivhTreeView when specialities and service types are not enabled" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should get providers only who are available for appointments" time="0.048" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should not include retired providers" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsFilterController"/>
    <testcase name="should initialize enable calendar view from config" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsManageController"/>
    <testcase name="should navigate to summary tab" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsManageController"/>
    <testcase name="should navigate to appointments tab calendar view if configured" time="0.14" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsManageController"/>
    <testcase name="should navigate to appointments tab list view if calendar view is not configured" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsManageController"/>
    <testcase name="should get tabName from state.current" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsManageController"/>
    <testcase name="should initialize to viewDate in stateParams if provided" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should initialize the week to current week and date to todays date" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should construct dates array for current week on initialization" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should Get all the appointments summary for current week on initialization" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should go to list view on clicking of appointment count" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should set service uuids and date when services and date are passed" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should set the appointments to the response data" time="0.038" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should set to true if it is current date" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should set to false if it is not current date" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsSummaryController"/>
    <testcase name="should not fetch appointments when doFetchAppointmentsData is set to false" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should get appointments for date" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should push &quot;No provider appointments&quot; resource when there are appointments with no provider" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should construct resources and events for appointments" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should append to existing event if they are of same slot &amp; provider &amp; service" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should not append to existing event if they are of same slot &amp; provider &amp; but not service" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should filter out the cancelled appointments" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should return true when there are no appointments for the selected date" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should not include &quot;No Provider&quot; in resources when there are no appointments with &quot;No Provider&quot;" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should include &quot;No Provider&quot; in resources appointments when there are appointments with &quot;No Provider&quot;" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should get config value for autoRefreshIntervalInSeconds" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should call interval function when autoRefreshIntervalInSeconds is defined" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should not call interval function when autoRefreshIntervalInSeconds is an invalid string" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should cancel interval when autoRefreshIntervalInSeconds is defined" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should not cancel interval when autoRefreshIntervalInSeconds is undefined" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsCalendarViewController"/>
    <testcase name="should init events and eventSources and uiConfig with default values if not configured" time="0.059" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should init uiConfig with configured values" time="0.046" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should not be selectable if date is a past date" time="0.069" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should be selectable if date is today" time="0.063" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should be selectable if date is future date" time="0.048" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should go to new appointment state on createAppointment only if the user has Manage privilege" time="0.05" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should not go to new appointment state on createAppointment if the user does not have Manage privilege" time="0.046" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should call calendarView pop up on eventClick with appointments and enableCreateAppointment true for current date" time="0.065" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should call calendarView pop up on eventClick with appointments and enableCreateAppointment true for future date" time="0.051" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should call calendarView pop up on eventClick with appointments and enableCreateAppointment false for past dates" time="0.05" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should reset the event and resources when appointments has been changed" time="0.054" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsDayCalendarController"/>
    <testcase name="should initialize today&apos;s date if not viewDate is provided in stateParams" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should initialize to viewDate in stateParams if provided" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should initialize enable service types and enable specialities from config" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should initialize searchedPatient as true if search enabled and patient exists " time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should not get appointments for the date if searchedPatient is true" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should not fetch appointments when doFetchAppointmentsData is set to false" time="0.052" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should get appointments for date" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should select an appointment" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should unselect an appointment if is selected" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should filter appointments on loading list view" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should display searched patient appointment history" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should reset filtered appointments to its previous data" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should sort appointments by the sort column" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should reverse sort appointments if sorted on the same column consecutively" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should sort searched appointments by date in list view" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should have table info" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should filter the appointments on change of filter params" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController goBackToPreviousView"/>
    <testcase name="should print the page with the appointments list" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should print the page with the default list view when configuration template url is not there" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should show a pop up on confirmAction" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should change status and show success message on confirmation on confirmAction" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should call passed function on cancel on confirmAction" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should show a pop up on undo checkIn" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should change status on confirmation on undo check in" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should get display of a json object" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should internationalize the keys if present of the json object" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should init with empty array if config is undefined" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isAllowedAction"/>
    <testcase name="should init with configured actions if config is present" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isAllowedAction"/>
    <testcase name="should return false if config is empty" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isAllowedAction"/>
    <testcase name="should return true if action exists in config" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isAllowedAction"/>
    <testcase name="should return false if action does not exist in config" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isAllowedAction"/>
    <testcase name="should init with empty object if config is undefined" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should init with configured actions if config is present" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should return false if no appointment is selected" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should return false if allowedActionsByStatus is undefined" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should return true if action exists in allowedActionsByStatus" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should return false if action does not exist in allowedActionsByStatus" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController isValidAction"/>
    <testcase name="should get colors for config" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should get config value for autoRefreshIntervalInSeconds" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should call interval function when autoRefreshIntervalInSeconds is defined" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should not call interval function when autoRefreshIntervalInSeconds is an invalid string" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should cancel interval when autoRefreshIntervalInSeconds is defined" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="should not cancel interval when autoRefreshIntervalInSeconds is undefined" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsListViewController"/>
    <testcase name="Shold toggle the display of color picker on click the picker multiple times" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="setColor should set the selectedColor field and close the color picker" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should close the color picker on clicking outside the picker, if the colorPicker is popped up" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should init view date to the last valid date if undefined" time="0.11" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DatePicker"/>
    <testcase name="should call function provided to ngChange when data is changed" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DatePicker"/>
    <testcase name="should call function provided to ngChange when data is changed and enter key is pressed" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DatePicker"/>
    <testcase name="should not call function provided to ngChange when data is not changed" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DatePicker"/>
    <testcase name="should call function provided to ngChange when data is changed and mouse is pressed outside" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DatePicker"/>
    <testcase name="should remove item from selectedValues" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).multiSelectAutocomplete"/>
    <testcase name="should return the matched values when we pass the query" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).multiSelectAutocomplete"/>
    <testcase name="should search for patient" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should build response map with patient name and identifier for list of patients" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should get appointments for a patient on select of patient" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should clear patient if searchEnabled is false" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should search for patient appointments if state params has patient on init" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should build response map with only given name when family name is null for given patients" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Search"/>
    <testcase name="should init availability and startOfWeek" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should take 2 as startOfWeek by default" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="isNew should return true if state is 0" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability checkState"/>
    <testcase name="isEdit should return true if state is 1" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability checkState"/>
    <testcase name="isReadOnly should return true if state is 2" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability checkState"/>
    <testcase name="should return true if all fields are valid" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if all fields are empty" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if startTime is not filled" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if endTime is not filled" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if not even one day is selected" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if startTime is greater than endTime" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should return false if startTime is equal to endTime" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability validateAvailability"/>
    <testcase name="should add availability to weeklyAvailability list" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should not add availability if endTime is within existing duration" time="0.033" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should add availability if endTime falls on existing duration startTime" time="0.041" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should not add availability if startTime is within existing duration)" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should add availability if startTime falls on existing duration endTime)" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should not add availability if new duration is within existing duration)" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should not add availability if duration equals existing duration )" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should add availability(duration matches but not days)" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability addAvailability"/>
    <testcase name="should clear max appointments limit if it is invalid" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should not clear max appointments limit if it is valid" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should not delete availability if not confirmed" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should delete availability from weeklyAvailability list if confirmed" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should change state to edit and take backup availability on enableEdit" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should change state to readonly and restore availability on cancel" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability"/>
    <testcase name="should update availability on weeklyAvailability list and set its state to read only" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should add availability even if it overlaps with availability in list at the same index" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should not update availability if endTime is within existing duration)" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should add availability if endTime falls on existing duration startTime)" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should not add availability if startTime is within existing duration" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should add availability if startTime falls on existing duration endTime)" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should not add availability if duration is within existing duration)" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should not add availability if duration equals existing duration )" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should add availability if duration matches but not days)" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceAvailability updateAvailability"/>
    <testcase name="should validate to false if duplicate service type name is added" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should validate to true if unique service type is added" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should clear the service type name and duration after adding a serviceType" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should add service type name and duration to service" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should be able to add new service type with same name and duration as that of a voided service type" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should clear the serviceType duration on clearing the serviceType name" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should set the serviceType duration to default duration when entering the serviceType name" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should open the confirmation dialog when trying to delete an unsaved service type" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should check for any future appointments against the saved service type trying to delete and throw an error if there are future non-cancelled appointment" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should check for any future appointments against the saved service type trying to delete and open confirmation dialog if there are no future non-cancelled appointment" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should close the dialog when delete transition is cancelled" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should delete the unsaved service type from the service type list on Delete confirmation" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should add void info to the saved service type on Delete confirmation" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ServiceTypes"/>
    <testcase name="should init view date to today if undefined" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekPicker"/>
    <testcase name="should call function provided to ngChange when data is changed with the ISO week day start standard" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekPicker"/>
    <testcase name="should call function provided to ngChange when data is changed with week start date as Sunday" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekPicker"/>
    <testcase name="should set the view date to next week when goToNextWeek is clicked" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekPicker"/>
    <testcase name="should set the view date to previous week when goToPreviousWeek is clicked" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekPicker"/>
    <testcase name="should assign days to ngmodel" time="0.054" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekdaySelector"/>
    <testcase name="should display first two letters of day name" time="0.048" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekdaySelector"/>
    <testcase name="should toggle isSelected of a day when clicked" time="0.055" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekdaySelector"/>
    <testcase name="should not toggle isSelected of a day if ngDisabled is true" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekdaySelector"/>
    <testcase name="should call function provided to ngChange when data is changed" time="0.033" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WeekdaySelector"/>
    <testcase name="should filter appointments by service" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should not filter appointments when the service list is empty" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should filter appointments by service type" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return all appointments when filter is empty" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return all appointments when serviceUuids and serviceTypeUuids are empty" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return all appointments when serviceUuids, serviceTypeUuids, providerUuids and statusLists are empty" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return filter by providerUuids" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return all appointments when filters are undfined" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should return filter by providerUuids" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should filter &quot;No Provider&quot; appointments when &quot;No Provider&quot; is selected" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).appointmentsFilter"/>
    <testcase name="should change time string to date time" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceViewModel"/>
    <testcase name="should group weekly availability by starTime and endTime" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentServiceViewModel"/>
    <testcase name="should change date time format to time string" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentService"/>
    <testcase name="should re arrange all weeklyAvailabilities by day" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentService"/>
    <testcase name="should construct weekly availability by day for multiple availabilities" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentService"/>
    <testcase name="should parse the appointment response" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentViewModel"/>
    <testcase name="should save the appointment" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should search for appointments with given info" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should get all the appointments summary for all the service types" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should get all the appointments for a service type" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should get appointment by uuid" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should change the status of the appointment" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsService"/>
    <testcase name="should post service data on save" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsServiceService"/>
    <testcase name="should get service load" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsServiceService"/>
    <testcase name="should delete the appointment service" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsServiceService"/>
    <testcase name="should get appointment services with speciality and service types" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsServiceService"/>
    <testcase name="should get all appointment services with default response" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AppointmentsServiceService"/>
    <testcase name="construct patients list and group appointments by patients" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should assign patient when there is a single appointment" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should open ngDialog with properties" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="closePromise should reload current state if value false" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="closePromise should reload current state if value is not false" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should go to new appointment state on navigateTo new" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should go to edit appointment state on navigateTo edit" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should reload current state on navigateTo any other" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should show a pop up on confirmAction" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should change status on confirmation on confirmAction" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should call passed function on cancel on confirmAction" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp"/>
    <testcase name="should init with empty array if config is undefined" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isAllowedAction"/>
    <testcase name="should init with configured actions if config is present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isAllowedAction"/>
    <testcase name="should return false if config is empty" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isAllowedAction"/>
    <testcase name="should return true if action exists in config" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isAllowedAction"/>
    <testcase name="should return false if action does not exist in config" time="0.122" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isAllowedAction"/>
    <testcase name="should init with empty object if config is undefined" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should init with configured actions if config is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should return false if no appointment is selected" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should return false if allowedActionsByStatus is undefined" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should return true if action exists in allowedActionsByStatus" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should return false if action does not exist in allowedActionsByStatus" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CalendarViewPopUp isValidAction"/>
    <testcase name="should open ngDialog with properties" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).checkinPopUp"/>
    <testcase name="should call ngDialog close with two arguments on popUp close" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).checkinPopUp"/>
    <testcase name="should call confirmAction with correct parameter on checkIn" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).checkinPopUp"/>
    <testcase name="should call http get with no params" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Provider Service"/>
    <testcase name="should call http get with custom params" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Provider Service"/>
    <testcase name="should get all specialities" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SpecialityService"/>
    <testcase name="Should show confirmation dialog if patient&apos;s visit type is not defaultVisitType and hideStartNewVisitPopUp is not present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should show confirmation dialog if patient&apos;s visit type is not defaultVisitType and hideStartNewVisitPopUp is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should close the visit and create a new encounter if dialog is confirmed" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should close the confirmation dialog if cancelled" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should create an encounter with in the current visit if continued" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should not create encounter with in the current visit if closed" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should show an error message and not close the current visit when defaultVisitType is not configured and yet the user decides to close the current visit and create a new visit of type defaultVisitType" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should show an error message when defaultVisitType is not configured and patient doesn&apos;t have any visit open while admitting" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Admit Patient action if the patient is discharged the visit has closed" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Undo Discharge action if the patient is discharged and visit is open" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Discharge Patient and Transfer Patient action if the patient is admitted" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should have Admit Patient action if the patient is not admitted in given visit" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should throw an error message, when the bed is not selected and trying to transfer a patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should throw an error message, when source and destination beds are same while trying to transfer a patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should show confirmation dialog, when a bed is selected and trying to transfer a patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should create an encounter of type Transfer and assign patient to new bed, On transferConfirmation when the selected bed is still available" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should not transfer the patient when the selected bed is already assigned to some other patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should throw an error message, when the bed is not selected and trying to discharge the patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should show confirmation dialog, when a bed is selected and trying to discharge the patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="Should create an encounter of type Discharge and discharge the patient from the bed, On dischargeConfirmation" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should not admit the patient when the bed has patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should admit the patient in the same visit when the bed available and visit type is default visit type" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should admit the patient and close the current visit and open a new Hospital visit when the bed available and the current visit not of Hospital visit " time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AdtController"/>
    <testcase name="should expand the department and raise an event, when stateParams have the have departmentInfo" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="should expand the department and raise an event, with the stateParams departmentInfo and ignore the bedDetails departmentInfo" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="should expand the department and raise an event, when rootScope has bedDetails i.e for admitted patients" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="should hide bedLayout and dont change the state if it is bedManagement, on select of the department" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="should hide bedLayout and change the state to bedManagement, if the state is bedManagement.bed, on select of the department" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="Should update the total bed count on the department as well as room level" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="Should get the visitInfo using patientUuid and goto dashboard state with patientUuid and visitUuid" time="0.075" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="Should open ngDialog for updating tags for the selected bed" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementController"/>
    <testcase name="should close ngDialog on cancel" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should disable the button for the tag, if the tag is selected" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should enable the button for the tag, if the tag is not selected" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should get all bedTags and bedTagMaps for the selected bed" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should be able search tags, if tags are not selected" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should be able to add tags, on clicking the tag button" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should update the bedTagMaps for the selected bed, on click of update" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editTagsController"/>
    <testcase name="should change the state to admit" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).HeaderController"/>
    <testcase name="should change the state to bedManagement" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).HeaderController"/>
    <testcase name="should initialize bed info based on Admitted Patient Details " time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomController"/>
    <testcase name="should initialize current view with grid as a default view" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomController"/>
    <testcase name="should assign selected bed info on rootScope, when selectedbed is not OCCUPIED and the state is bedManagement.patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomGridController"/>
    <testcase name="Should reset patient on rootScope on selecting AVAILABLE bed and go to bedManagement.bed state" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomGridController"/>
    <testcase name="Should not reset patient on rootScope on selecting Occupied bed and go to bedManagement.bed state " time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomGridController"/>
    <testcase name="should get color for beds" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomGridController"/>
    <testcase name="Should set table details" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomListController"/>
    <testcase name="Should sort the tableData with columnName passed and clicking twice should inverse the results" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RoomListController"/>
    <testcase name="should initialize room info based the selected room and not go to bedManagement state, when the state is other than bedManagement.bed" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should initialize room info based the selected room and go to bedManagement state, when the state is bedManagement.bed" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should initialize room info, if the patient is already admitted having bedDetails on the rootScope" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should initialize room info, on admitting the patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should initialize room info, with the context from the stateParams and ignore the bedDetails" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="should set roomSelected to be false when department is changed" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).WardController"/>
    <testcase name="Should set window.location.href to value of selected backlink, when backlink type is link" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should change state to value of selected backlink with params , when backlink type is state and params are provided" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should return true when state current name is bedManagement and key is BED_MANAGEMENT_KEY" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should return true when state current name is bedManagement.bed and key is BED_MANAGEMENT_KEY" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should return true when state current name is home and key is ADMIT_HOME_KEY" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should return true when state current name is bedManagement.patient and key is ADMIT_HOME_KEY" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).backLinksCacheBuster"/>
    <testcase name="Should get the concept with conceptSetName and create a obs mapper with the concept and if there no saved observation for the same concept" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should get the concept with conceptSetName and create a obs mapper with the concept and if there is saved observation for the same concept exist copy values to mapped observation" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should enable obs on edit and reset the changes made observation on cancel, i.e reset back to last saved obs and disable them" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should enable obs on edit and save the observations with the changes made" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should reset observation values, if fetch the observations returns empty array for patient" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should set onBedManagement to true when current state is bedmanagement" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should set onBedManagement to false when current state is not bedmanagement" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="Should throw a message when trying to save empty fields" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).editAdtObservations"/>
    <testcase name="should create grid layout" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BedManagementService createLayoutGrid"/>
    <testcase name="should get all the bedTags available" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedTagMapService"/>
    <testcase name="should assign given tag to bed and respond with tagMapUuid" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedTagMapService"/>
    <testcase name="should void the bedTagMap using given tagMapUuid" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedTagMapService"/>
    <testcase name="service should retrieve" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Query Service"/>
    <testcase name="service should retrieve beds for ward" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Ward Service"/>
    <testcase name="service should get wards list" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Ward Service"/>
    <testcase name="should call the app service to retrieve program config from app descriptor" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).consultationContextController initialization"/>
    <testcase name="should populate patientInfoSection with ageLimit picked from config" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).consultationContextController initialization"/>
    <testcase name="should set visitUuid from visitHistory" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).consultationContextController initialization"/>
    <testcase name="should initialize the appropriate cookie date and change cookie on select" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientListHeaderController"/>
    <testcase name="should map providersServer output" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientListHeaderController"/>
    <testcase name="should close ngDialog on closePopUp" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientListHeaderController"/>
    <testcase name="should open ngDialog on popUpHandler" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientListHeaderController"/>
    <testcase name="should pick default tab as current tab." time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should check is numeric." time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should check is empty" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should check data format" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should check test result class for expected style" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should broadcast event:clearVisitBoard with the particular tab as param" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController switchTab"/>
    <testcase name="should broadcast event:clearVisitBoard with the particular tab as param" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController closeTab"/>
    <testcase name="should broadcastevent:printVisitTab with the current tab as param" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController print"/>
    <testcase name="should return false if current tab doesnt have printing configured" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController showPrint"/>
    <testcase name="should return true if current tab have printing configured" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController showPrint"/>
    <testcase name="should call location path method" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController gotoPatientDashboard"/>
    <testcase name="should goto consultation from Visit page" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController gotoConsultation"/>
    <testcase name="should goto consultation from Visit page with given stateParams" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitHeaderController gotoConsultation"/>
    <testcase name="should initialise all display by default tabs and the first tab" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should get the right tab" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should switch to visible tab" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should add the tab to visible tabs when switched to hidden tab" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return true if there are tabs to show" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return false if there are no tabs to show" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should close the current tab and switch to the first tab" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should not close a display by default tab" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return all the unopened tabs" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return true for the current tab" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return true if there is a print configuration for the tab" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return false if there is no print configuration for the tab" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should return the print configuration" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).tab config"/>
    <testcase name="should set visitUuids and patientUuid to the sections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit Tab Config "/>
    <testcase name="should have identifierkey as title when there is no translation key" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit Tab Config "/>
    <testcase name="should not have identifierkey as dashboardName when there is translation key" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit Tab Config "/>
    <testcase name="should fetch concept config" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch all concepts config" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch obs ignore list and combine with default set of obs to ignore" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch other investigations" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch visitPage config" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch printConfig" time="0.052" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch medication config" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch app config"/>
    <testcase name="should fetch consultation boards" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch extension config"/>
    <testcase name="should fetch consultation board link" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch extension config"/>
    <testcase name="should fetch treatment action link" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch extension config"/>
    <testcase name="should fetch concept set extensions" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should fetch app config and extension config should fetch extension config"/>
    <testcase name="should fetch consultation board link with parameters" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).clinicalAppConfigService should send parameters for program uuid and enrollment uuid"/>
    <testcase name="should fetch ActiveDrugOrders for a patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should fetch prescribed drug orders for the patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should fetch config for treatment" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should fetch drug order details for given concept set" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should fetch drug order details excluding given concept set" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should void drug order" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TreamentService treatment Service"/>
    <testcase name="should concat mandatory sections if defaultSections flag is present" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitTabConfigService"/>
    <testcase name="should concat mandatory sections even if there are no other sections defined" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitTabConfigService"/>
    <testcase name="should override the mandatory section config if config section is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitTabConfigService"/>
    <testcase name="should build the config map and call the c3 generate method" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).c3Chart"/>
    <testcase name="should not fail for empty set of observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObsGropingHelper"/>
    <testcase name="should group observations with formFieldPath" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObsGropingHelper"/>
    <testcase name="should group observations without formFieldPath" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObsGropingHelper"/>
    <testcase name="should group observations with and without formFieldPath" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObsGropingHelper"/>
    <testcase name="should add a new specimen to the specimens list" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Create specimen"/>
    <testcase name="should add specimen to new specimens list" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Edit Specimen"/>
    <testcase name="should delete specimen from the existing specimen list" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Delete Specimen"/>
    <testcase name="should remove specimen from saved specimens and new specimens" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Delete Specimen"/>
    <testcase name="Should return the Specimen short name if it present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Get Display Name"/>
    <testcase name="Should return the Specimen short name if it present, otherwise return Specimen name" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Get Display Name"/>
    <testcase name="Should return the return Specimen name, if Specimen short name is null" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Get Display Name"/>
    <testcase name="Should return the return Specimen name, if Specimen short name is empty" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Get Display Name"/>
    <testcase name="Should return freeText Type if sample type is Other" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Get Display Name"/>
    <testcase name="should set showNonCodedSampleText to be true on call of editSpecimen" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Specimen type Others"/>
    <testcase name="should set showNonCodedSampleText to be true on call of handleUpdate" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Specimen type Others"/>
    <testcase name="should set typeFreeText to null if specimen is not of type Other  " time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller Specimen type Others"/>
    <testcase name="should broadcast event:pageUnload if configured to show popUp" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller initialization"/>
    <testcase name="should add an empty specimen if there is no specimen" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller initialization"/>
    <testcase name="should not add an empty specimen if there are already specimens" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Controller initialization"/>
    <testcase name="should make a call to retrospectiveEntryService.getRetrospectiveEntry" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController retrospectiveClass"/>
    <testcase name="should return false if retrospectiveEntryService.getRetrospectiveEntry return empty value " time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController retrospectiveClass"/>
    <testcase name="should toggle rootscope.showControlPanel" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController toggleControlPanel"/>
    <testcase name="should set rootscope.showControlPanel to false" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController collapseControlPanel"/>
    <testcase name="should return default css if current user locale is not defined" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController getLocaleCSS"/>
    <testcase name="should return css corresponding to current user locale " time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ClinicalController getLocaleCSS"/>
    <testcase name="should load all obs templates" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should load all obs templates along with forms from implementers interface" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should push template to selected obs template when template is pinned as favorite" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should push template to selected obs template when template is added as default in extensions" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should load all obs templates according to the number of observations" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should load all templates specific to program when program uuid is present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should add template to the list when clicked" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should sort templates based on the order it is saved and open the last visited template" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetPageController init"/>
    <testcase name="should add placeHolder for new diagnosis" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller initialization"/>
    <testcase name="should call appService and set canDeleteDiagnosis,allowOnlyCodedDiagnosis" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller initialization"/>
    <testcase name="should get diagnosis meta data and set isStatusConfigured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller initialization"/>
    <testcase name="should set conditions to be hidden on UI when configured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller initialization"/>
    <testcase name="should make a call to diagnosis service getAllFor" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller getDiagnosis()"/>
    <testcase name="should make a call to diagnosis service getAllFor with synonym" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller getDiagnosis()"/>
    <testcase name="should throw error message for duplicate diagnosis" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller should validate the diagnosis"/>
    <testcase name="should throw error message for duplicate diagnosis based on case insensitivity" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller should validate the diagnosis"/>
    <testcase name="happens when the presave handler is fired" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller removing blank diagnosis"/>
    <testcase name="happens when the scope is destroyed" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller removing blank diagnosis"/>
    <testcase name="should happen only once during the lifecycle of the controller" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller removing blank diagnosis"/>
    <testcase name="should happens when empty rows has been reset to one " time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller removing blank diagnosis"/>
    <testcase name="should filter only conditions with given status" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller filterConditions"/>
    <testcase name="should add condition if does not exist" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller addCondition"/>
    <testcase name="should not add condition if exists as active" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller addCondition"/>
    <testcase name="should replace existing unsaved condition" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller addCondition"/>
    <testcase name="should set condition status and date" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller markAs"/>
    <testcase name="should return true when diagnosis&apos;s concept is an existing active condition" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller cannotBeACondition"/>
    <testcase name="should return true when diagnosis is presumed" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller cannotBeACondition"/>
    <testcase name="should return false when diagnosis&apos;s concept is an existing not &apos;active condition&apos;" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller cannotBeACondition"/>
    <testcase name="should set condition as follow up" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller addConditionAsFollowUp"/>
    <testcase name="should create obs for follow up condition" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller addConditionAsFollowUp"/>
    <testcase name="should invoke retrospectiveEntryService" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Controller isRetrospectiveMode"/>
    <testcase name="should call formService.getFormDetail" time="0.042" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Form Controls"/>
    <testcase name="should call spinner.forPromise" time="0.06" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Form Controls"/>
    <testcase name="should call renderWithControls" time="0.059" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Form Controls"/>
    <testcase name="should return only the inactive drugorders from the past" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drug order history helper"/>
    <testcase name="should return only the inactive drugorders from the past when there are noncoded drugorders" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drug order history helper"/>
    <testcase name="should return none if there are no inactive drugorders" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drug order history helper"/>
    <testcase name="should focus only on the first errored element" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).focusOnInputErrors"/>
    <testcase name="should return patient url" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).url helper"/>
    <testcase name="should return consultation url" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).url helper"/>
    <testcase name="should return visit url" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).url helper"/>
    <testcase name="should initialise fields from config" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderOptions"/>
    <testcase name="picks the dose units that are configured from all dose units" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderOptions"/>
    <testcase name="picks the routes that are configured from all routes" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderOptions"/>
    <testcase name="picks the frequencies that are configured from all frequencies" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderOptions"/>
    <testcase name="should use masterConfig as input configuration when fields missing in inputConfig" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderOptions"/>
    <testcase name="Should return true if date collected is set and not type" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Dirty"/>
    <testcase name="Should return true if date collected is not set and type is set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Dirty"/>
    <testcase name="Should return false if both date collected and type is set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Dirty"/>
    <testcase name="Should return false if both date collected and type is not set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Dirty"/>
    <testcase name="Should return true if date collected, identifier, type are not set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Empty"/>
    <testcase name="Should return false if date collected is set and identifier and type are not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Empty"/>
    <testcase name="Should return false identifier is set and dateCollected and type are not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Empty"/>
    <testcase name="Should return false if type is set and dateCollected and identifier are not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Empty"/>
    <testcase name="Should return false if type, dateCollected and identifier are set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Is Empty"/>
    <testcase name="Should return false if result has no value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen atLeastOneValueSet"/>
    <testcase name="Should return true if result has value" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen atLeastOneValueSet"/>
    <testcase name="Should return true if dateCollected has no value and hasIllegalDateCollected is true" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen isDateCollectedDirty"/>
    <testcase name="Should return true if dateCollected has value and hasIllegalDateCollected is false" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen isDateCollectedDirty"/>
    <testcase name="Should return true if type has no value and hasIllegalType is true" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen isTypeDirty"/>
    <testcase name="Should return true if type has value and hasIllegalType is false" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen isTypeDirty"/>
    <testcase name="Should return true when typeFreeText is not set and specimen.type.name is Other" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Dirty Rules for typeFreeText"/>
    <testcase name="Should return false when typeFreeText is set and specimen.type.name is Other" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Dirty Rules for typeFreeText"/>
    <testcase name="Should return false when typeFree specimen.type.name is not Other and typeFreeText is not set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Dirty Rules for typeFreeText"/>
    <testcase name="Should return true when additional attributes are filled" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Dirty Rules for Additional Attributes"/>
    <testcase name="Should return true if date collected is not set, type is not set and additional attribute is set" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Dirty Rules for Additional Attributes"/>
    <testcase name="Specimen should be cleared and voided on save with mandatory attributes" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Empty existing specimen should be voided"/>
    <testcase name="Specimen should be voided ony if it is empty and existing" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Empty existing specimen should be voided"/>
    <testcase name="should call http service to return the form list" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).formService"/>
    <testcase name="should call http service to return all the forms with name, version and uuid" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).formService"/>
    <testcase name="should call http service to return the form detail" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).formService"/>
    <testcase name="should call http service with default url to return the form translations" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).formService"/>
    <testcase name="should call http service with custom url to return the form translations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).formService"/>
    <testcase name="should initialize treatment config based on tab name configured" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should initialise drugOrderHistoryConfig if it is not available" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should initialize duration units" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should initialize dosage units" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should retrieve all dose Units configured for the tab" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should disable elements on UI mentioned in inputConfig" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="drug name field should be dropdown if configured as dropdown" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="drug name field should be autocomplete if dropdown is not configured" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="drugConceptSet should be part of inputOptionsConfig" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="show additional information only if sos or dosing instructions or additional instructions are configured to be shown" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="hide additional information only if sos, dosing instructions, additional instructions are hidden" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should return default config for medication if not configured" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="showBulkChangeDuration should return true if it is not hidden via config" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="showBulkChangeDuration should return true if it is not configured" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="showBulkChangeDuration should return false if it is hidden via config" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).treatmentConfig"/>
    <testcase name="should call http service to return the form data" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitFormService"/>
    <testcase name="should call http service to return the form data with concept names" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitFormService"/>
    <testcase name="should call http service to return the form data specific to program" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitFormService"/>
    <testcase name="should return true if mantissa available" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController DosingUnitsFractions()"/>
    <testcase name="should return false if mantissa not available" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController DosingUnitsFractions()"/>
    <testcase name="adds treatment object to list of treatments if newOrderSet flag is false" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="adds treatment object to list of treatments if newOrderSet flag is true" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should not set effective stop date when duration is not specified" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should set effective stop date when duration is specified" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should empty treatment" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="clears existing treatment object" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should set auto focus on drug name" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should not allow to add new order if there is already existing order" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should allow to add new drug order if new order is scheduled to start on same day as stop date of already existing order" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should allow to add new drug order if new order is scheduled to end on same day as start date of already existing order" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should allow to add new drug order if new order is scheduled to end on same day as start date of unsaved order" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should replace a drug order being edited in the same index it was originally in" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add()"/>
    <testcase name="should save as a free text drug order on click of accept button" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() add free text drug order()"/>
    <testcase name="should save as a coded-drug after the entered free text drug is edited to coded" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() add free text drug order()"/>
    <testcase name="should remove the added coded-drug on changing the drug name" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() add free text drug order()"/>
    <testcase name="should enable accept button on editing an accepted drug" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() add free text drug order()"/>
    <testcase name="should change the effectiveStartDate to null when it is today" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() isEffectiveStartDateSameAsToday"/>
    <testcase name="should not change the effectiveStartDate when it is not today" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() isEffectiveStartDateSameAsToday"/>
    <testcase name="should not change the effectiveStartDate when it is not today on retro" time="0.175" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add() isEffectiveStartDateSameAsToday"/>
    <testcase name="new drug orders for dates 2-4 and 5-6 and 4-5 in this order" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="new drug orders for dates 2-4 and 4-5 and 5-6 in this order" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="new scheduled drug orders for dates 2-4 and 5-6 and 4-5 in this order with past encounter date" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="existing drug orders for dates 2-3 and 3-4 and revised drug order for 2-3" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="existing drug orders 4-5 and new drug order 2-4(starting today)" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="new orders for dates 2-4 and 3-6" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should not allow overlapping order"/>
    <testcase name="new orders for dates 2-4 and 5-6 and 4-6" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should not allow overlapping order"/>
    <testcase name="new orders for 2-4 and 5-6 and 3-4" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should not allow overlapping order"/>
    <testcase name="new orders for dates 2-4 and 5-6 and 5-6" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should not allow overlapping order"/>
    <testcase name="new orders for dates 2-4 and 5-6 and 2-4" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders amongst new orders on Save should not allow overlapping order"/>
    <testcase name="existing drug orders for dates 2-4 and 5-6 and new drug order for 4-5" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="existing drug orders for dates 2-4 and 5-6 and new drug order for 6-7" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should allow potentially overlapping order whose dates can be set and be resolved"/>
    <testcase name="should not allow conflicting orders for dates 2-4 and new drug order for 3-6" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should not allow overlapping order"/>
    <testcase name="should not allow conflicting orders for dates 2-4 and 5-6 and new drug order for 4-6" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should not allow overlapping order"/>
    <testcase name="should not allow conflicting orders for dates 2-4 and 5-6 and new drug order for 3-4" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should not allow overlapping order"/>
    <testcase name="should not allow conflicting orders for dates 2-4 and 5-6 and new drug order for 5-6" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should not allow overlapping order"/>
    <testcase name="should not allow conflicting orders for dates 2-4 and 5-6 and new drug order for 2-4" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Detect Overlapping orders with existing Orders on Save should not allow overlapping order"/>
    <testcase name="should edit the drug order if conflicting order is unsaved when revise is selected" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController After selection from ng-dialog"/>
    <testcase name="should edit the drug order if conflicting order is a saved order when revise is selected" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController After selection from ng-dialog"/>
    <testcase name="should check for any incomplete drug orders" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Save"/>
    <testcase name="should check for any unadded drug orders" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Save"/>
    <testcase name="should do nothing if form is blank" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Clear Form"/>
    <testcase name="should clear treatment object" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Clear Form"/>
    <testcase name="should reset the treatment being edited" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Clear Form"/>
    <testcase name="should set auto focus on drug name" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Clear Form"/>
    <testcase name="should set editDrugEntryUniformFrequency to true on edit of uniform dosing type drug" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Edit DrugOrder()"/>
    <testcase name="should set editDrugEntryVariableFrequency to true on edit of variable dosing type drug" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Edit DrugOrder()"/>
    <testcase name="should set editDrugEntryUniformFrequency to true on revise of uniform dosing type drug" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Revise DrugOrder()"/>
    <testcase name="should set editDrugEntryVariableFrequency to true on revise of variable dosing type drug" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Revise DrugOrder()"/>
    <testcase name="should remove the drugOrder from activeAndScheduledDrugOrders" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController Void DrugOrder"/>
    <testcase name="should not save the treatment if a discontinued drug order is added at the same time" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController saveTreatment()"/>
    <testcase name="should not fail for empty treatments" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController saveTreatment()"/>
    <testcase name="should save multiple tab drug orders for both order-set and new prescription sections" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController saveTreatment()"/>
    <testcase name="should mark the drug order for discontinue" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when discontinued"/>
    <testcase name="should add the drugOrder to discontinueDrugs" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when discontinued"/>
    <testcase name="verify that the discontinued order is correctly created while saving" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when discontinued"/>
    <testcase name="should change the action to new" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when undo removing"/>
    <testcase name="should remove the drugOrder from discontinuedDrugs and removeableDrugs" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when undo removing"/>
    <testcase name="should remove the proper drugOrder from discontinuedDrugs" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController when undo removing"/>
    <testcase name="should add order set drugs to orderSetTreatments list in scope" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add orderset"/>
    <testcase name="should reset include flag for all orderSetTreatments if any of them is conflicting with active or scheduled drug" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController add orderset"/>
    <testcase name="should empty orderSetTreatments when orderset is removed" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController remove orderset"/>
    <testcase name="should include orderSetMember to save list only if it is not conflicting with active/scheduled drugs" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddTreatmentController include orderSetMember checkbox"/>
    <testcase name="should initialize all the necessary variables" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="should initialize the available boards" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="current board should not be set if dashboard is clicked" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="should give patient name for display" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="should check whether app is in editEncounterMode" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="should get ipd configuration from config" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController init"/>
    <testcase name="should return proper URL when showing a different board" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should return proper URL with extension params as parameters with url" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should not append encounterUuid in query params if not available" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should set current tab based on url" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should set current tab based on the tab config provided" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should validate the current tab drug orders" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should be on currentBoard if click on same tab" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController tabUrl"/>
    <testcase name="should stay in current state if &apos;cancel&apos; is selected" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should save and go to target state if &apos;save and continue&apos; is selected" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should not save and go to target state if &apos;don&apos;t save&apos; is selected" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should not show dialog to confirm save where the target state falls within consultation" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should not show dialog to confirm save if from state is equal to to state and the patient uuid is same." time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should show dialog to confirm save if from state is equal to to state and the patient uuid is different" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should display save confirm dialog if the config is set" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should not display save confirm dialog if the config is not set" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController showSaveConfirmDialogConfig"/>
    <testcase name="should not broadcast page unload event if not configured to prompt" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController open consultation"/>
    <testcase name="should broadcast page unload event if configured to prompt" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController open consultation"/>
    <testcase name="should toggle dashboard" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController open consultation"/>
    <testcase name="should show dashboard menu" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController open consultation"/>
    <testcase name="should return true if configured" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should return false if configured" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should return false if configured value is null" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should return false if configured value is empty string" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should return false if configured value is string" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should return false if configured value is numeric" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController enablePatientSearch"/>
    <testcase name="should save encounter data" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController save"/>
    <testcase name="should not save encounter data if there errors in form" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController save"/>
    <testcase name="should save conditions to consultation after encounter save" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController save"/>
    <testcase name="should throw error if save conditions failed after encounter save" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController save"/>
    <testcase name="should generate the URL as mentioned in the config" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController"/>
    <testcase name="should initialize with default adtNavigationConfig if we are not mentioning anything in config" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController"/>
    <testcase name="should initialize with adtNavigationConfig if we mention in config" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationController"/>
    <testcase name="should return false when there is no data on consultation" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController IsConsultationTabEmpty"/>
    <testcase name="should return false when there are observations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController IsConsultationTabEmpty"/>
    <testcase name="should set Consultation Notes to null" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController Testing the controller"/>
    <testcase name="should return empty as there are no observations" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController Testing the controller"/>
    <testcase name="should negate show" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController Testing the controller"/>
    <testcase name="should return one diagnosis" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController Testing the controller with data in scope"/>
    <testcase name="should not display follow up condition obs and Drug Dispensed Obs if present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConsultationSummaryController Filter followup Condition Obs and Drug Dispensed Obs"/>
    <testcase name="should return true if it is in retrospective mode" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should not save the dispositionNotes when its empty" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should save the dispositionNotes when its Not empty" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should save the dispositionNotes when its voided " time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should unvoid the note when when dispositionNotes is added back" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should show disposition action as admit patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should show disposition action as admit patient if he is discharged" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should show disposition actions as transfer patient and transfer patient if he is admitted" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should display configured disposition actions irrespective of admission status" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should give undefined value if any of the default values are deleted" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DispositionController"/>
    <testcase name="should setup scope variables" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController when initialized"/>
    <testcase name="should get prescribed and active Drugorders with correct no of visits " time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController when initialized"/>
    <testcase name="should enable reason text for all concepts when nothing is configured" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should enable reason text only for configured reason concepts" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should disable reason text only for unconfigured reason concepts" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should broadcast refillDrugOrder event on refill" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController"/>
    <testcase name="should broadcast reviseDrugOrder event on revise" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController"/>
    <testcase name="should broadcast discontinueDrugOrder event on discontinue and update form conditions" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController"/>
    <testcase name="should be same as start date of drug order if past drug" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController Min stop date"/>
    <testcase name="should be same as current date if scheduled drug" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController Min stop date"/>
    <testcase name="should not return duplicate orderSet orders if orders are from previous visit" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderHistoryController sortOrderSetDrugsFollowedByDrugOrders"/>
    <testcase name="if confirm return true then should return true and set shouldPromptBrowserReload to true " time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditObservationFormController directivePreCloseCallback : when shouldPromptBeforeClose,config and hasVisitedConsultation are set to true"/>
    <testcase name="if confirm return true then should return true and set shouldPromptBrowserReload to false " time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditObservationFormController directivePreCloseCallback :  when shouldPromptBeforeClose,config are true and hasVisitedConsultation is false"/>
    <testcase name="if confirm return false then should return false and set shouldPromptBrowserReload to true " time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditObservationFormController directivePreCloseCallback :  when shouldPromptBeforeClose,config are true and hasVisitedConsultation is false"/>
    <testcase name="should return undefined and set shouldPromptBrowserReload to true " time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditObservationFormController directivePreCloseCallback :  when either shouldPromptBeforeClose or config are false"/>
    <testcase name="should initialize selectable tests, panels, filters, categories" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should show all tests and panels by default" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should select the selectables and the children for existing investigations" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should not select the selectables for voided investigations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should add an investigation on selecting a test" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should add only one investigation on selecting a panel with tests" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should remove unsaved investigation when test is unselected" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should void saved investigation when corresponding test is unselected" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should unvoid the voided investigation when corresponding test is selected" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest after loading tests"/>
    <testcase name="should filter tests, panels and categories" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest filterBy"/>
    <testcase name="should clear the filters" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).InvestigationsSelectorControllerTest showAll"/>
    <testcase name="should print visit summary of latest visit" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LatestPrescriptionPrintController when loaded"/>
    <testcase name="should show message when no active visit found" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LatestPrescriptionPrintController when loaded"/>
    <testcase name="should return true if it is in retrospective mode" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="should fetch ordersConfig and set in tabs" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="should fetch all orders templates" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="showLabSampleTests() should set the particular LabOrder to be active" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="getConceptClassesInSet() should get concept classes sorted by name" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="getOrderTemplate :should return the Order template" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="should get short name if exists" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController getName"/>
    <testcase name="should get fully specified name if short name doesn&apos;t exist" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController getName"/>
    <testcase name="should get undefined if both fully specified name and short name don&apos;t exist" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController getName"/>
    <testcase name="should update the selectedOrders when some other tab is activated" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should open the first left category by default on activating a tab" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should not update selected orders if no tab is active" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return true when orders is not saved and NeedsPrint configured for Radiology" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return false when order was saved and NeedsPrint configured for Radiology" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return true if there is Urgent configuration for Radiology" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return false if there is no configuration for NeedsPrint in Lab Orders and order is not saved" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return false if there is no configuration for NeedsPrint in Lab Orders and order was saved" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return true if there is configuration for Urgent in Lab Orders" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should return false if there is no configuration for Urgent in Lab Orders" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController activateTab"/>
    <testcase name="should open notes popup" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController"/>
    <testcase name="should append needs print text in start of notes" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController appendPrintNotes"/>
    <testcase name="should not append needs print text in start of notes if its already there" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController appendPrintNotes"/>
    <testcase name="should set edited flag when the commentToFulfiller is not same as previous note and close the popup" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController setEditedFlag"/>
    <testcase name="should not set edited flag when the commentToFulfiller is same as previous note and close the popup" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController setEditedFlag"/>
    <testcase name="should return true if the test is directly present in the selected test orders" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isActiveOrderPresent"/>
    <testcase name="should return true if the child order is present for the selected test order" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isActiveOrderPresent"/>
    <testcase name="should return false if the order is directly present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isTestIndirectlyPresent"/>
    <testcase name="should return false for test if panel has been discontinued" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isTestIndirectlyPresent"/>
    <testcase name="should return true if the order is indirectly present so that it can be made readonly" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isTestIndirectlyPresent"/>
    <testcase name="child order should not be editable if it is parent is present" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isOrderNotEditable"/>
    <testcase name="child order should be editable if its parent is not selected" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isOrderNotEditable"/>
    <testcase name="parent order should always be editable" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController isOrderNotEditable"/>
    <testcase name="should add an order if it is not present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController toggleOrderSelection"/>
    <testcase name="should remove an order if it is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController toggleOrderSelection"/>
    <testcase name="should remove all the child orders if its parent is added" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController toggleOrderSelection"/>
    <testcase name="already saved order should be marked as discontinued if removed" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController toggleOrderSelection"/>
    <testcase name="should revise the discontinued order if the same order is added" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController toggleOrderSelection"/>
    <testcase name="reset search string" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderController search tests and panels"/>
    <testcase name="should init dashboard sections" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient dashboard controller"/>
    <testcase name="should init dashboard sections for given date range" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient dashboard controller"/>
    <testcase name="should init dashboard tabs based on default tab" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient dashboard controller"/>
    <testcase name="should init dashboard tabs based on current tab" time="0.044" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient dashboard controller"/>
    <testcase name="creates configuration for displaying lab order display parameters" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardLabOrdersController when initialized"/>
    <testcase name="passes in just the patient uuid when no parameters specified" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardLabOrdersController when initialized"/>
    <testcase name="should initialize" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardLabSummaryController"/>
    <testcase name="should setup the scope" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardTreatmentController The controller is loaded"/>
    <testcase name="should fetch dashboard params" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardTreatmentController Should fetch configuration"/>
    <testcase name="should fetch summary page params" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardTreatmentController Should fetch configuration"/>
    <testcase name="should set showDateTimeForIntake to false" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplateController initialization"/>
    <testcase name="should set showTimeForProgress to true" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplateController initialization"/>
    <testcase name="should return the matched section based on the name" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplateController getDiseaseTemplateSection"/>
    <testcase name="should transition to patient.patientProgram.show state" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardProgramsController gotoDetailsPage"/>
    <testcase name="should call the spinner service" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientDashboardVisitsController"/>
    <testcase name="Display the Panel Orders" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive order-selector works properly"/>
    <testcase name="should filter tests by fullName, shortName and synonym" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive order-selector works properly filterBySearchString"/>
    <testcase name="should not filter those tests whose names does not match the search string" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive order-selector works properly filterBySearchString"/>
    <testcase name="should set show patients list to false" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients init"/>
    <testcase name="should display only max patients as specified in config" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients init"/>
    <testcase name="should create a search object to search patients" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients init"/>
    <testcase name="should check whether user has visited any patient previously" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients has previous"/>
    <testcase name="should not have any previous patient if he/she is the first patient" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients has previous"/>
    <testcase name="should check whether user has visited any patient after the current patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients has next"/>
    <testcase name="should not have any next patient if he/she is the last patient" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients has next"/>
    <testcase name="should go to previous patient in the list" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients Previous"/>
    <testcase name="should go to next patient in the list" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients Next"/>
    <testcase name="should toggle to true from false" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients toggle patients list"/>
    <testcase name="should toggle to false from true" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients toggle patients list"/>
    <testcase name="should make a call to get active patients and store pass it to search object" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients getActivePatients"/>
    <testcase name="should not make a call to get active patients if it already fetched" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Recent patients getActivePatients"/>
    <testcase name="should get disease template sections for the current dashboard" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should get max recently viewed patients" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should get default number of maximum recently viewed patients if not specified" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should have identifierkey as dashboardName when there is no translation key" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should not have identifierkey as dashboardName when there is translation key" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should merge continuous treatments if all information&apos;s are same except duration and durationUnits" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should merge continuous treatments if even though duration and duration units are different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge treatments if all information&apos;s are same except duration and durationUnits and has one day gap." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if drug uuid&apos;s are different" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if instruction&apos;s are different" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if dose are different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if dose units are different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if frequency are different" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if route&apos;s are different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if SOS&apos;s are different" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should not merge continuous drug&apos;s if addn Instrction&apos;s are different" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil mergeContinuousTreatments"/>
    <testcase name="should sort drugs by date desc and time asc" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil sortDrugOrders"/>
    <testcase name="Same date and time objects should be ordered by order number" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil sortDrugOrders"/>
    <testcase name="should sort drugs by date and time asc " time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil sortDrugOrdersInChronologicalOrder"/>
    <testcase name="Same date and time objects should be ordered by order number asc" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrderUtil sortDrugOrdersInChronologicalOrder"/>
    <testcase name="represents a line in an observation graph" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation graph line"/>
    <testcase name="allows addition of observation points after initialization" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation graph line"/>
    <testcase name="should create a model out of data coming from the service and the config | one observation against dateTime" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Model"/>
    <testcase name="should create a model out of data coming from the service and the config | one observation against age" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Model"/>
    <testcase name="should create a model out of data coming from the service and the config | two observations against dateTime" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Model"/>
    <testcase name="should create model for growth chart" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Model"/>
    <testcase name="should create model without taking concept name text case (Uppercase/Lowercase) into account" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Model"/>
    <testcase name="converts the csv into an ObservationGraph" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Reference"/>
    <testcase name="should filter rows by matching the person&apos;s gender and age" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Reference"/>
    <testcase name="should exclude age and y-axis concept header" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph Reference"/>
    <testcase name="getDisplayValue should return display in value if value is object" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation data display control"/>
    <testcase name="getDisplayValue should return value directly if value is not an object" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation data display control"/>
    <testcase name="hasGroupMembers should return true if group members are present" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation data display control"/>
    <testcase name="hasGroupMembers should return false and not throw an error if group members are null" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation data display control"/>
    <testcase name="should not call observationsService fetch for no config" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should not render the graph for no observations" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should call c3 render for observations with xaxis as observationDatetime" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should call c3 render for observations with xaxis as age" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should render growth chart" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should call c3 render for observations with xaxis as another concept" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should call c3 render for multiple observations on the yAxis" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should ignore reference lines if there are multiple y axis concepts for graph" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should render with lowNormal and hiNormal values when they are available in the concept" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should throw error when gender column is not present in the reference csv file" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should throw error when age column is not present in the reference csv file" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should throw error when non numeric column is given as y-axis concept in the config for reference chart" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Graph"/>
    <testcase name="should create the config object" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationGraphConfig"/>
    <testcase name="should create the config object for growth chart with given y-axis concept" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationGraphConfig"/>
    <testcase name="should fetch core patient information if there is no configuration" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should fetch person attributes if configured." time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should fetch program attributes if configured." time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should fetch patient identifiers if configured." time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should set preffered identifier to configured program attributes" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should set preffered identifier to configured person attributes" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should set preffered identifier to patient identifier if the configure attribute does not exists" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="program attribute should take precendence while setting preferred identifier" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should convert boolean values to &apos;yes&apos; or &apos;no&apos;" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should set showNameOnPrint to true by default" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should set showNameOnPrint from config" time="0.048" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context initialization"/>
    <testcase name="should return true if the section is other active drug orders" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should return false if the section is not other active drug orders" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Treatment Table DisplayControl"/>
    <testcase name="should show visit tables" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visits Table display control"/>
    <testcase name="Should add accessionNotes to the accessions if there are accessionNotes in the encounter of type accessionNotes" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AccessionNotesMapper accessionNotesMapperTest"/>
    <testcase name="Should not add accessionNotes to the accessions if there are accessionNotes in the encounter of some other type" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AccessionNotesMapper accessionNotesMapperTest"/>
    <testcase name="Should not add accessionNotes to the accessions if there are no accessionNotes in the encounter of type accessionNotes" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AccessionNotesMapper accessionNotesMapperTest"/>
    <testcase name="Should not add accessionNotes by datetime attribute" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AccessionNotesMapper accessionNotesMapperTest"/>
    <testcase name="should set default visit type in encounter when there is no active visit" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should not update encounterData with logged in location uuid in editEncounter mode" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should update encounterData with logged in location uuid when not in editEncounter mode" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should update encounterData with default visit type if visit uuid is not set and not in retrospective mode either" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should update encounterData with default retrospective visit type if it is in retrospective mode either" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should set program enrollment uuid as patient program uuid" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should set urgency value to order if the urgency button is clicked" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should not set urgency value to order if the urgency button is not clicked" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should put followup conditions in consultation observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionMapper map"/>
    <testcase name="should give a list of obs from all encounter transaction objects in an array" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionToObsMapper"/>
    <testcase name="should ignore voided observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionToObsMapper"/>
    <testcase name="should inject provider into each observation" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionToObsMapper"/>
    <testcase name="should create multiselectObservations in each observations list" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterTransactionToObsMapper"/>
    <testcase name="should map lab concepts to tests associated to panels and department" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabConceptsMapper map"/>
    <testcase name="should map the tests belonging to multiple panels as single test" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabConceptsMapper map"/>
    <testcase name="should map the tests belonging to multiple panels as single test" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabConceptsMapper map"/>
    <testcase name="should return zero tests when labConceptSet does not exist" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabConceptsMapper map"/>
    <testcase name="should map wthout categories when departmentsConceptSet does not exist" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabConceptsMapper map"/>
    <testcase name="should map lab result observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LabResultsMapper"/>
    <testcase name="should map other investigations concepts to tests associated to type, category and orderTypeName" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OtherInvestigationsConceptsMapper map"/>
    <testcase name="should map orderTypeName to investigation type name if not order types are not configured" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OtherInvestigationsConceptsMapper map"/>
    <testcase name="should return zero tests when otherInvestigationsConceptSet does not exist" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OtherInvestigationsConceptsMapper map"/>
    <testcase name="should map wthout categories when categoriesConceptSet does not exist" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OtherInvestigationsConceptsMapper map"/>
    <testcase name="should map" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientFileObservationsMapper"/>
    <testcase name="should map radiology record observations" time="0.062" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).RecordsMapper"/>
    <testcase name="should map observation to specimen object" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SpecimenMapper mapObservationToSpecimen"/>
    <testcase name="should map observation to specimen object without sort order of obs created DateTime" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SpecimenMapper mapObservationToSpecimen"/>
    <testcase name="should map specimen to observation object" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SpecimenMapper mapSpecimenToObservation"/>
    <testcase name="should be true when there is no stopDatetime" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry isAcitve"/>
    <testcase name="should be false when there is stopDatetime" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry isAcitve"/>
    <testcase name="should be true when startDate and stopDate are same but time is different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry isOneDayVisit"/>
    <testcase name="should be true when there is no stopDatetime" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry isOneDayVisit"/>
    <testcase name="should be false when there is startDate and stopDate are different" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry isOneDayVisit"/>
    <testcase name="should return a visit type string if its a name" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry getVisitType"/>
    <testcase name="should return a visit type string if its a display" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry getVisitType"/>
    <testcase name="should return undefined if no visit type is there" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitHistoryEntry getVisitType"/>
    <testcase name="should have all tests by default" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Category filteredTests"/>
    <testcase name="should apply given filter" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Category filter"/>
    <testcase name="should negate the value of isNonCoded" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition toggleNonCoded"/>
    <testcase name="should reset concept uuid" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition clearConcept"/>
    <testcase name="should be okay to not have concept name" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValidConcept"/>
    <testcase name="shouldn&apos;t be okay to have coded concept without uuid" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValidConcept"/>
    <testcase name="should be okay to have non coded concept" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValidConcept"/>
    <testcase name="should be okay to have coded concept with a status" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValid"/>
    <testcase name="should be okay to have non coded concept with a status" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValid"/>
    <testcase name="shouldn&apos;t be okay to have non coded concept without status" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValid"/>
    <testcase name="shouldn&apos;t be okay to have coded concept without status" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isValid"/>
    <testcase name="should be empty when status,Concept and onsetDate is not given" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isEmpty"/>
    <testcase name="should be empty when status,Concept or onsetDate is given " time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isEmpty"/>
    <testcase name="shouldn&apos;t be okay if status is INACTIVE" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isActive"/>
    <testcase name="should be okay if status is ACTIVE" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition isActive"/>
    <testcase name="should be the name of non coded condition" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition displayString"/>
    <testcase name="should be the short name of coded condition" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition displayString"/>
    <testcase name="should be the full name of coded condition" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition displayString"/>
    <testcase name="should be the same condition when given condition is ACTIVE" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition getPreviousActiveCondition"/>
    <testcase name="should be the same condition when there is no previous condition" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition getPreviousActiveCondition"/>
    <testcase name="should be the second previous condition when that is active" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition getPreviousActiveCondition"/>
    <testcase name="should consider only condition without endDate" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition fromConditionHistories"/>
    <testcase name="should take recently onSet condition" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).condition fromConditionHistories"/>
    <testcase name="should map the server model to view model for patient dashboard" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplate"/>
    <testcase name="should map grid observations values as comma seperated values" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplate"/>
    <testcase name="should be true when date is between start date and end date" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder isActiveOnDate"/>
    <testcase name="should be stopped when drug is stopped on that date" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder getStatusOnDate"/>
    <testcase name="should not be stopped when drug is not stopped but expires on that date" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder getStatusOnDate"/>
    <testcase name="should be active when drug is not stopped on that date and is active" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder getStatusOnDate"/>
    <testcase name="should be inactive when date falls out of the start date and expire date / stopped date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder getStatusOnDate"/>
    <testcase name="should be true if drug is consumed today" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder isActive"/>
    <testcase name="should create DrugOrder Object" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrder createFromUIObject"/>
    <testcase name="should get the text to be displayed in the treatment list" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the decimal text sum of both dose and mantissa when doseFractions config is absent" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the mixed fraction text sum of both dose and mantissa when doseFractions config is present" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the same real number in the treatment list when doseFractions config is absent" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the mixed fraction text in the treatment list when doseFractions config is defined " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the same real number in the treatment list when doseFractions is defined and it doesnt have entry for mantissa part of real number" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should display mixed fraction variable dosages if doseFractions is present" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should not display mixed fraction variable dosages if doseFractions is absent" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should display mixed fraction variable dosages if doseFractions is present and in the list" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the text to be displayed in the treatment list with dosage instructions" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the text to be displayed in the treatment list without dosage instructions if the instruction is as directed" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the text to be displayed in the treatment list without route" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get the text to be displayed in the treatment list without route without duration" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should get default durationUnit from config if available" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should reset uniformDosingType when changing frequency type to variable" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should reset variableDosingType when changing frequency type to uniform" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should copy dose units to uniformDosingType when changing frequency type to uniform" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should copy dose units to variableDosingType when changing frequency type to variable" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should change duration unit based on frequency factor for uniform frequency type" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should not change duration units for non-uniform frequency type" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should not change duration units if frequencyDefaultDurationUnitsMap is not configured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel"/>
    <testcase name="should convert duration to days" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateDurationInDays"/>
    <testcase name="should default units to days" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateDurationInDays"/>
    <testcase name="should calculate for uniform dose, frequency and duration" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should convert duration units to days for calulation" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should calculate for variable dose and duration" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should result in 0 for uniform dose when dose is not available" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should result in NaN for uniform dose when duration is not available" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should result in 0 for uniform dose when frequency is not available" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should not calculate quantity if entered manually" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should not calculate quantity if entered via edit" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should calculate quantity units all the time" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should be active if the effective stop date is in future" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should be active if the effective stop date is null" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should not be active if the effective stop date is less than current datetime" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should be active if the effective stop date is greater than current datetime" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should be inActive if the date_stopped is set" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel calculateQuantityAndUnit"/>
    <testcase name="should return true if the action is discontinue" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Discontinued"/>
    <testcase name="should return false if the action is new" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Discontinued"/>
    <testcase name="should return false if the action is Revise" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Discontinued"/>
    <testcase name="should return true if the action is discontinue" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel isDiscontinuedOrStopped"/>
    <testcase name="should return true if order has been stopped" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel isDiscontinuedOrStopped"/>
    <testcase name="should return false if action is not discontinue and order is not stopped" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel isDiscontinuedOrStopped"/>
    <testcase name="should map fields correctly from Drug Order" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel createFromContract"/>
    <testcase name="should map fields for reverse synced drug orders" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel createFromContract"/>
    <testcase name="should be mapped to BahmniObservation" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel OrderAttributes"/>
    <testcase name="should create a new object that can be used for revision" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel revise"/>
    <testcase name="should not change scheduled date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel revise"/>
    <testcase name="should map uuid to previousOrderUuid" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel revise"/>
    <testcase name="should set action as REVISE" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel revise"/>
    <testcase name="should clear dose, doseUnits and quantity for reverse synced drug orders" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel revise"/>
    <testcase name="should refill an inactive drug order" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should refill an active drug order" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should refill an active drug order ending today" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should set quantity units as Unit(s) for reverse synced drug orders" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should clear dose and quantity for reverse synced drug orders" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should set doseUnits and route based on drug form for reverse synced drug orders" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel refill"/>
    <testcase name="should not change scheduled date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel edit"/>
    <testcase name="should create a copy of the drug to be edited" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel edit"/>
    <testcase name="should set the flag isBeingEdited" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel edit"/>
    <testcase name="should set scheduledDate if date is in future" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel set effectiveStartDate"/>
    <testcase name="should clear scheduledDate if date is equals now" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel set effectiveStartDate"/>
    <testcase name="should clear scheduledDate if date is today few seconds ago" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel set effectiveStartDate"/>
    <testcase name="should clear scheduledDate if date is past date" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel set effectiveStartDate"/>
    <testcase name="should fail validation if dose type is empty" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should not fail validation if all dose info is empty" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should fail validation if dose units are given but dose is not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should pass validation when dose is not given but dose fractions and units are given" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should pass validation dose and dose units are given " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should not throw validation error when route is present in routesToMakeDoseSectionNonMandatory but units are defaulted" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should validate mantissa for the routes in routesToMakeDoseSectionNonMandatory" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should validate uniform dose unit for the routes in routesToMakeDoseSectionNonMandatory" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should fail validation if dose is given but dose units is not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for uniform dosing type"/>
    <testcase name="should not fail validation if all the fields are empty" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should fail validation if morning dose is set and all other fields are empty" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should fail validation if afternoon dose is set and all other fields are empty" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should fail validation if evening dose is set and all other fields are empty" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should fail validation if dose units is set and all other fields are empty" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should pass validation if all the fields are set" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should pass validation if dose and dose units are not given for the routes in routesToMakeDoseSectionNonMandatory " time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should validate variable dose with all three doses entered" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel Validate for variable dosing type"/>
    <testcase name="should return true if the frequency type is same." time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel isFrequencyType"/>
    <testcase name="should return false if the frequency type is not same." time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel isFrequencyType"/>
    <testcase name="should return drug + form" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDisplayName"/>
    <testcase name="should return drug form as quantity unit if drug form is tablet" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDescriptionWithQuantity">
      <skipped/>
    </testcase>
    <testcase name="should return drug form as quantity unit if dose is not specified" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDescriptionWithQuantity"/>
    <testcase name="should return drug form as quantity unit if variable dose is not specified" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDescriptionWithQuantity"/>
    <testcase name="should return drug form as quantity unit if mantissa is specified" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDescriptionWithQuantity"/>
    <testcase name="should return &apos;Units&apos; as quantity unit if drug form is not a tablet or a capsule" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getDescriptionWithQuantity">
      <skipped/>
    </testcase>
    <testcase name="should set default dose units if units available in config" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel changeDrug"/>
    <testcase name="should not set dose units if units not available in config" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel changeDrug"/>
    <testcase name="should not fail when drugFormDefaults is not define for drug form" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel changeDrug"/>
    <testcase name="should not fail when app config does not have drugFormDefaults" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel changeDrug"/>
    <testcase name="should not fail when drug is cleared" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel changeDrug"/>
    <testcase name="should return true if self order and other order do not have effective stop date" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order and other order have same start date" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return false if self order ends before other order starts" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return false if self order starts after other Order" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order stops after the other order has already been activated" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order starts when the other order is active" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order starts before other order and ends after other order" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order starts on the stop date of other order" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if other order starts before self order and ends after self order" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if self order ends on the start date of other order" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should return true if both orders start and end on same dates" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel checkOverlappingSchedule"/>
    <testcase name="should concatenate all span details by (+) and return as string" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getSpanDetails"/>
    <testcase name="should not concatenate if span details is only one." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getSpanDetails"/>
    <testcase name="should return empty string if there is no span for the drug" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).drugOrderViewModel getSpanDetails"/>
    <testcase name="should initialize DrugSchedule with visit admission date, discharge disposition date and drug orders within these dates" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule create"/>
    <testcase name="should initialize end date to today when discharge date is not provided" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule create"/>
    <testcase name="should initialize end date to today when discharge disposition date and discharge date is not provided" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule create"/>
    <testcase name="should get days from fromDate to toDate" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getDays"/>
    <testcase name="should consider actual days covered, ignoring time" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getDays"/>
    <testcase name="should group drug orders by drug" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getDrugs"/>
    <testcase name="should display the concept if drug not provided" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getDrugs"/>
    <testcase name="should be stopped if the drug was stopped on that day" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule Drug getStatusOnDate"/>
    <testcase name="should be stopped if the drug was revised and stopped on that day" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule Drug getStatusOnDate"/>
    <testcase name="should be active if the drug was revised on that day" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule Drug getStatusOnDate"/>
    <testcase name="should return only the drug name when dosageForm does not exists" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule createSynonym"/>
    <testcase name="should return the name and form when form exists" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule createSynonym"/>
    <testcase name="should return the label with synonym name when it is given" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule createSynonym"/>
    <testcase name="should return the label with out synonym name when it is not given" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule createSynonym"/>
    <testcase name="should have drug along with the synonym created" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule createSynonym"/>
    <testcase name="should return only the search results of drugs whose name matches with the search string" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getAllMatchingSynonyms"/>
    <testcase name="should return unique list of search results when more than one name is same" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getAllMatchingSynonyms"/>
    <testcase name="should return a sorted list of search results" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugSchedule getAllMatchingSynonyms"/>
    <testcase name="should have isOpen set to false if there are no obs recorded" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should have isOpen set to true if there are obs recorded" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should have set formUuid and formName and version" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should have collapseInerSections to be false by default" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should set collapseInerSections to true on call of minimizeInnerSections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should set collapseInerSections to false on call of maximizeInnerSections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should have set options if extensions are passed" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm init"/>
    <testcase name="should set isOpen as true first time" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm toggleDisplay"/>
    <testcase name="set isOpen as false when it was previously open" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationForm toggleDisplay"/>
    <testcase name="should group observations by encounterDateTime" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationTemplate"/>
    <testcase name="should sort encounters by encounterDateTime" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationTemplate"/>
    <testcase name="should get short name as display name for test" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order"/>
    <testcase name="should get fully specified name as display name for test" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order"/>
    <testcase name="should create order" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order"/>
    <testcase name="should create a revised order" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order"/>
    <testcase name="should create and map test orders with observations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderObservationsMapper"/>
    <testcase name="should create drugOrders from a list of encounterTransaction objects" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should filter based on filter function" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should populate provider from encounterTransaction" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should populate accessionUuid for orders from encounterTransaction" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should sort tests" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should remove tests that are voided" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should sort tests under panel" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersMapper"/>
    <testcase name="should be able to group a list of objects based on a particular parameter" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Result Grouper"/>
    <testcase name="should select with self as source when source not specified" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable select"/>
    <testcase name="should select with given source" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable select"/>
    <testcase name="should select the children" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable select"/>
    <testcase name="should remove the child&apos;s self source" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable select"/>
    <testcase name="should unselect with self as source" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable unselect"/>
    <testcase name="should unselect for given source only" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable unselect"/>
    <testcase name="should unselect the children" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable unselect"/>
    <testcase name="should slect when not selected" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable toggle"/>
    <testcase name="should unslect when selected" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable toggle"/>
    <testcase name="should be triggered on selecting" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should be triggered on child and parent on selecting parent" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should be triggered on unselecting" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should be triggered on child and parent on unselecting parent" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should not be triggered on selecting, when it is already selected via same source" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should not be triggered on unselecting, when it is already unselected via same source" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should be triggered on selecting already selected one via different sources" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should be triggered on unselecting already unselected one via different sources" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Selectable onSelectionChange"/>
    <testcase name="should sort by sortWeight of the test/panel in AllTestsAndPanels" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptWeightBasedSorter"/>
    <testcase name="should add test/panel at the end if it is not there in allTestsAndPanels" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptWeightBasedSorter"/>
    <testcase name="should sort test results by sortWeight of the test in AllTestsAndPanels" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptWeightBasedSorter"/>
    <testcase name="should sort tabular results by sortWeight" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptWeightBasedSorter"/>
    <testcase name="should sort test results in a panel by sortWeight of the test in AllTestsAndPanels" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptWeightBasedSorter"/>
    <testcase name="should return true if any uploaded files present for a given date and test" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TabularLabOrderResults hasUploadedFiles()"/>
    <testcase name="should return only initial and latest accessions based on the count" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TabularLabOrderResults getDateLabels"/>
    <testcase name="should return all accessions if the initial and latest count is greater than or equal to number of accessions" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TabularLabOrderResults getDateLabels"/>
    <testcase name="should return all accessions if the initial and latest count is undefined" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TabularLabOrderResults getDateLabels"/>
    <testcase name="maps error messages from the source error object" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UiErrorSpec"/>
    <testcase name="returns original message if no mapping found" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UiErrorSpec"/>
    <testcase name="returns original message if no mapping found" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UiErrorSpec"/>
    <testcase name="returns null if cannot parse object" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UiErrorSpec"/>
    <testcase name="should not fail for falsy objects" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UiErrorSpec"/>
    <testcase name="ensure links are correctly populated on patient consultation page" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="ensure links are correctly populated on patient visit page and without an active visit" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="ensure links are correctly populated on patient dashboard page without an active visit" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="ensure links are correctly populated for an active visit" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="isInEditEncounterMode() should return false for active encounter" time="0.042" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="isInEditEncounterMode() should return true on editing encounter" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="goToDashBoard should return the dashboardUrl with given program stateParams" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="goToDashBoard should return the dashboardUrl with given default stateParams " time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientControlPanelTest"/>
    <testcase name="should fetch latest disease templates for a patient" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplateService disease templates"/>
    <testcase name="should fetch all disease template for the patient" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DiseaseTemplateService disease templates"/>
    <testcase name="should fetch all Lab orders &amp; results and group by accessions" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).labOrderResultService getAllForPatient"/>
    <testcase name="should sort by accession date and group by panel" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).labOrderResultService getAllForPatient"/>
    <testcase name="should group accessions by panel" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).labOrderResultService getAllForPatient"/>
    <testcase name="should fetch visits for a patient" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientVisitHistoryService getVisits"/>
    <testcase name="should load config" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loading config functionality"/>
    <testcase name="should change a leaf value" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should be able to remove a value" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should be able to add a new node" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should be able to remove a null node" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should not throw an error for undefined parameter" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should not throw an error for undefined base and custom parameters" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="should not throw an error for undefined base parameter" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).merge functionality"/>
    <testcase name="to the user when user doesn&apos;t select the location for the first time login" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication Should show error message "/>
    <testcase name="should createSession and authenticate the user then save currentUser and cookie in the $bahmniCookieStore" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication loginUser"/>
    <testcase name="should authenticate the user and show otp page" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication loginUserWithOTP"/>
    <testcase name="should createSession and authenticate the user with OTP then save currentUser and cookie in the $bahmniCookieStore" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication loginUserWithOTP"/>
    <testcase name="should show login page if the user is locked out after too may invalid OTP attempts" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication loginUserWithOTP"/>
    <testcase name="should send the resend otp request" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Authentication loginUserWithOTP"/>
    <testcase name="should save favourite obs templates as a string separated by &apos;###&apos; and recently viewed patients as  json" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User contract"/>
    <testcase name="should return true when obsTemplate is marked as favourite" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User obs template"/>
    <testcase name="should toggle obsTemplate as favourite" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User obs template"/>
    <testcase name="should return true when ward is marked as a favorite" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User favorite wards"/>
    <testcase name="should toggle ward as favourite" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User favorite wards"/>
    <testcase name="should add patient to recently viewed list" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User recently viewed patients"/>
    <testcase name="should not add patient if patient is already in recently viewed list" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User recently viewed patients"/>
    <testcase name="should replace existing patient in recently viewed list if it has reached max limit" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).User recently viewed patients"/>
    <testcase name="should set hideAbnormalButton value from config first" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).concept"/>
    <testcase name="should apply form conditions for observation on AddMore" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet initialize the config"/>
    <testcase name="should set hideAbnormalButton value from config" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet initialize the config"/>
    <testcase name="should set number of visits from the config" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet initialize the config"/>
    <testcase name="should initialize concept set" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should initialize the rootObservation with proper value" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should update the observations on root scope" time="0.214" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should set the default value for observation" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should not set the default value for root observation even we configure" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should update form conditions" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should hide &apos;Example Notes&apos; while updating the form conditions" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should show &apos;Second Example Notes&apos; while updating the form conditions" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSet init"/>
    <testcase name="should conceptSetGroup controller be initialized" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="showLeftPanelConceptSet should set the selected conceptset to be loaded, open, klass as active" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="focusOnErrors should broadcast, show error message" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="focusOnErrors should show error message from selected concept set section" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="openActiveForm should open the form and scroll to top" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="should delete the template only if other template with the same label is available" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="canRemove should return true only if it is unsaved template" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptSetGroup"/>
    <testcase name="Stepper With Bounds" time="0.034" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).directive: stepper"/>
    <testcase name="Stepper Without Bounds" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).directive: stepper"/>
    <testcase name="should map observation tree" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="should map multiSelect Obs" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="should map ObservationNode" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="should map obsGroups as tabular observations if configured" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="should get observations for view" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="should get observations for view when grid config is there" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservationMapper"/>
    <testcase name="toggleSelection should toggle selection for true and false value" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should clone the observation and remove the UUIDs once cloned" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="toggleSelection should set null value if toggled twice" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should clone new with null values" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="canAddMore should be true if configured" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="isRequired should retrieve value from conceptSetUIConfig" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should be valid if it is required and present" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should always be valid when it is not required" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should hide notes button when configured to not show" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should by default show notes button when nothing configured" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Boolean Observation"/>
    <testcase name="should push to a list of validations on add" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Concept Set group validation handler"/>
    <testcase name="shouldn&apos;t add validations &amp; return true" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Concept Set group validation handler"/>
    <testcase name="should push to a list of validations on add &amp; return false" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Concept Set group validation handler"/>
    <testcase name="should push to a list of validations on add" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Concept Set group validation handler"/>
    <testcase name="should copy value from savedObs" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should return display value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should return display value for answer if coded" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should be group if group members are present" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should be computed if concept class is computed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should be numeric if concept datatype is numeric" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should not be valid if observation value goes beyond absolute range" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should not be valid if observations child node value goes beyond absolute range" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should by default show notes button when nothing configured" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should hide notes button when configured to not show" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should allow future date the value is computed" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should not allow future date if allowFutureDates is set to false and the value is not computed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should allow future date time if the value is computed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should not allow future date time if allowFutureDates is set to false and the value is not computed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should clone the observation with order and hidden fields in place and link tabularObs to conceptSetObs" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should set atleastOneValueSet to true for observations with non voided values only" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation"/>
    <testcase name="should be a valid observation if the value is selected from autocomplete" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation autocomplete"/>
    <testcase name="should be a invalid observation if the value is not selected from autocomplete" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation autocomplete"/>
    <testcase name="should be a valid observation if value is integer and allow decimal is false and value is within absolute range" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be a valid observation if value is integer and allow decimal is true and value is within absolute range" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be a valid observation if value is decimal and allow decimal is true and value is within absolute range" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be an invalid observation if value is decimal and allow decimal is false" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be an invalid observation if value is integer and allow decimal is false but beyond absolute range" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be an invalid observation if value is decimal and allow decimal is true but beyond absolute range" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetObservation Numeric allowDecimal"/>
    <testcase name="should be true if &apos;showIf&apos; condition is not defined" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAvailable"/>
    <testcase name="should be false if &apos;showIf&apos; condition returns false" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAvailable"/>
    <testcase name="should be true if &apos;showIf&apos; condition returns true" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAvailable"/>
    <testcase name="should pass the context to the showIf function" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAvailable"/>
    <testcase name="should be true if concept set is configured to be default" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAdded"/>
    <testcase name="should be true if concept set observation has at least one value set, even if its not default" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAdded"/>
    <testcase name="should be false if concept set observation has value set to an empty string" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAdded"/>
    <testcase name="should be false if concept set has no observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isAdded"/>
    <testcase name="should be true if conceptSet observations has value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection isOpen"/>
    <testcase name="should return false if conceptSet observations has value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection canToggle"/>
    <testcase name="should return true if conceptSet observations has no value" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection canToggle"/>
    <testcase name="should return true if conceptSet observations has value 0" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection canToggle"/>
    <testcase name="should hide if open" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection toggleDisplay"/>
    <testcase name="should show if hidden" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection toggleDisplay"/>
    <testcase name="should clone the concept set section and set isAdded to true" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ConceptSetSection clone"/>
    <testcase name="should build custom representation recursively for given fields, child and number of levels" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CustomRepresentationBuilder build"/>
    <testcase name="should toggle selection of newly selected observation" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Multiselect Observation"/>
    <testcase name="should add new obs when there are no saved obs" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Multiselect Observation"/>
    <testcase name="should clone and create new empty value observation" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Multiselect Observation"/>
    <testcase name="should return array of selected values" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Multiselect Observation"/>
    <testcase name="should return freeTextAutocomplete if configured" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode getControlType"/>
    <testcase name="should return autocomplete if configured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode getControlType"/>
    <testcase name="should return html5data type if primaryObs datatype is Date,Numeric or Datetime" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode getControlType"/>
    <testcase name="should return text datatype if primaryObs is of text datatype" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode getControlType"/>
    <testcase name="should return buttonselect if nothing is configured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode getControlType"/>
    <testcase name="should return obs which is not Abnormal Obs or Duration" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode PrimaryObs"/>
    <testcase name="isComputed to be true if primaryObs is computed" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode PrimaryObs"/>
    <testcase name="should be a valid observation if the value is selected from autocomplete" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode autocomplete isValid"/>
    <testcase name="should be a invalid observation if the value is not selected from autocomplete" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode autocomplete isValid"/>
    <testcase name="should set abnormalObs value and erroneousValue to undefined if primaryObs value is not present and abnormalObs is set" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode onValueChanged"/>
    <testcase name="should call setAbnormal when primaryObs is numeric and has value and it is abnormal" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode onValueChanged"/>
    <testcase name="should be a valid observation if value is integer and allow decimal is false and value is within absolute range" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Numeric allowDecimal"/>
    <testcase name="should be a valid observation if value is integer and allow decimal is true and value is within absolute range" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Numeric allowDecimal"/>
    <testcase name="should be a valid observation if value is decimal and allow decimal is true and value is within absolute range" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Numeric allowDecimal"/>
    <testcase name="should be an invalid observation if value is decimal and allow decimal is false" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Numeric allowDecimal"/>
    <testcase name="should be an invalid observation if value is integer and value is outside the absolute range" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Numeric allowDecimal"/>
    <testcase name="should clone the  new observation" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode observationNode"/>
    <testcase name="should set free text value" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode observationNode"/>
    <testcase name="should set the duration, abnormal and unknown obs" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode observationNode"/>
    <testcase name="should get the display value for coded concept" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode observationNode"/>
    <testcase name="should update the observation with its first group member, if observation is not freetext autocomplete" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode observationNode"/>
    <testcase name="should validate the required observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode validate ObservationNode"/>
    <testcase name="should validate the free text auto complete" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode validate ObservationNode"/>
    <testcase name="should validate the observation date field" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode validate ObservationNode"/>
    <testcase name="should not throw exception if date field of type class computed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode validate ObservationNode"/>
    <testcase name="Should validate durationObs" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode validate ObservationNode"/>
    <testcase name="should text the comment config" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Observation node config"/>
    <testcase name="should test allow addmore configuration" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Observation node config"/>
    <testcase name="should test stepper config for numeric observation" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Observation node config"/>
    <testcase name="should test conciseText config" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationNode Observation node config"/>
    <testcase name="toggleSelection should toggle selection a value" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Type Observation"/>
    <testcase name="toggleSelection should set null value if toggled twice" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Specimen Type Observation"/>
    <testcase name="should have rows" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should have columns" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should add new row in the table" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should remove row in the table" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should remove last row in the table and add a new empty row" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="canAddMore, should return true if configured to show" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="atLeastOneValueSet, should return false if obsGroups has value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="atLeastOneValueSet, should return true if obsGroups has value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should clone itself" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should validate all observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Tabular Observations"/>
    <testcase name="should get no answer when the concept doesn&apos;t have answers" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptService #getAnswer"/>
    <testcase name="should get all uniq answers based on the uuid uniqueness" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptService #getAnswer"/>
    <testcase name="should get mapped answers using ConceptMapper" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptService #getAnswer"/>
    <testcase name="should get answers from openmrs concept api" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptService #getConceptByQuestion"/>
    <testcase name="should show the element if the user has privilege" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).show if privilege directive"/>
    <testcase name="should set title to bacteriology results" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Results Control Initialization"/>
    <testcase name="should not expand the specimens if dashboard is not being printed" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Results Control Initialization"/>
    <testcase name="should expand all specimens if dashboard is being printed" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Results Control Initialization"/>
    <testcase name="should validate form before saving and throw error message" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Results Control save specimens"/>
    <testcase name="should validate form before saving and give save confirmation message" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Bacteriology Results Control save specimens"/>
    <testcase name="should return the concept name when there is no abbreviation" time="0.049" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should return the abbreviation given the concept name" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should return the abbreviation from the provided heading source dictionary" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should return the short name when headingConceptSource is not configured" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should expected to call with the only patientUuid" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should expected to call with the both patientProgramUuid and patientUuid" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Chronic Treatment Chart DisplayControl"/>
    <testcase name="should check for display type of page sections" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard"/>
    <testcase name="should check for wrong display type to be half-page" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard"/>
    <testcase name="should check if section is either one-fourth or three-fourth" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard"/>
    <testcase name="should not change data availability check when hideEmptyDisplayControl is false" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DashboardSection"/>
    <testcase name="should change data availability check when hideEmptyDisplayControl is true" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DashboardSection"/>
    <testcase name="should get section by name" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard"/>
    <testcase name="should only get disease template section with data" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard"/>
    <testcase name="should group the sections based on the full width" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group sections with all half page width" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group the mixed sections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group the half and one-fourth sections" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group the three-fourth and one-fourth sections" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group all half-page and one-fourth sections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group full-page sections separately" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group all three-fourth and one-fourth present in-between" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="sections with no displayType should be grouped as half-page sections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group all half-page one-fourth together if no displayType mentioned" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group one-fourth with the first three-fourth section" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should group with half-page and one-fourth section if displayType is incorrect" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard group sections by type"/>
    <testcase name="should get the view template for observation section" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should get the view template for disposition section" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should get the view template for labOrder section" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should get the view template for custom control section" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should get generated id for observation section" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should not generated id for custom display section" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Dashboard Section"/>
    <testcase name="should check diagnosis date toggle" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis DisplayControl"/>
    <testcase name="should filter all ruled out diagnoses when showRuledOutDiagnoses flag is false" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis DisplayControl"/>
    <testcase name="should filter all ruled out diagnoses when showRuledOutDiagnoses flag is true" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis DisplayControl"/>
    <testcase name="should call dispositons by visit when visitUuid is passed" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should return notes when getNotes method is called" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should call dispositions by patient when visitUuid is NOT passed" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should hide details button when the notes is available" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should hide details button when the showDetailsButton is false" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should return noDispositions message when dispositions are not available" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Disposition DisplayControl"/>
    <testcase name="should show active visit star if visit stop date is not present" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Radiology Display Control"/>
    <testcase name="should not show active visit star if it is on the visit page" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Radiology Display Control"/>
    <testcase name="should return all configured drug orders taken by the patient" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Drug Order Details DisplayControl"/>
    <testcase name="should toggle the showDetails when drugOrder is selected" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Drug Order Details DisplayControl"/>
    <testcase name="should filter inactive drug orders when configured to not show them" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Drug Order Details DisplayControl"/>
    <testcase name="should return all configured drug orders taken by the patient" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl"/>
    <testcase name="should initialise columns if not specified in config" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl"/>
    <testcase name="should assign Drug Orders as default title if title is not specified in config" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl"/>
    <testcase name="should broadcast refillDrugOrder event on refill" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl"/>
    <testcase name="should broadcast reviseDrugOrder event on revise" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl reviseDrugOrder"/>
    <testcase name="should clear drug action flags for drug orders on listening to reviseDrugOrder event" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl reviseDrugOrder"/>
    <testcase name="should broadcast discontinueDrugOrder event on discontinue and update form conditions" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl"/>
    <testcase name="should enable reason text for all concepts when nothing is configured" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should enable reason text only for configured reason concepts" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should disable reason text only for unconfigured reason concepts" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl when conditionally enable or disable order reason text for drug stoppage"/>
    <testcase name="should pick the column name header key from treatmentConfig" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl Column header Internationalization"/>
    <testcase name="should pick the default column name header key if not present in treatmentConfig" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl Column header Internationalization"/>
    <testcase name="should broadcast sectionUpdated event on void" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DrugOrdersSection DisplayControl voidDrugOrder"/>
    <testcase name="should get all obs templates to display for particular patient, on dashboard." time="0.044" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control Initialization"/>
    <testcase name="should get only latest obs templates to display for particular patient." time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control Initialization"/>
    <testcase name="should get all obs templates to display for particular patient, on allForms page." time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control Initialization"/>
    <testcase name="should set shouldPromptBrowserReload and set showFormDate" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control Initialization"/>
    <testcase name="should get observation information to edit" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getEditObsData"/>
    <testcase name="should get observation observation information to show" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getConfigToFetchDataAndShow"/>
    <testcase name="should return displayString if there are no multiple names" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getDisplayName"/>
    <testcase name="should return first name istance if there is only one name for concept." time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getDisplayName"/>
    <testcase name="should return short name if there are more than one name for concept." time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getDisplayName"/>
    <testcase name="should return displayString if there are more than one name for concept and no short name." time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Forms Table display control getDisplayName"/>
    <testcase name="should get the navigationLinks html" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should show url for existing parameters" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should not show url for non-existing parameters" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should show only links configured under showLinks config" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should show only links configured under customLinks config" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should show collection of links configured under customLinks and showLinks config" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should not show any link if both customLinks and showLinks config are not configured" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should not show any link if both customLinks and showLinks config are not configured" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should not show url if the linkParams does not contain visitUuid" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).NavigationalLinks DisplayControl"/>
    <testcase name="should make the right http call as specified by its input" time="0.08" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl initialization"/>
    <testcase name="should return the concept name when there is no abbreviation and there is no short name and units not specified" time="0.066" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the concept short name when there is no abbreviation and there is short name available" time="0.062" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return abbreviation if the concept have it and if it is configured and units not specified" time="0.054" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the abbreviation name with units if units are specified" time="0.05" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the short name when headingConceptSource is not configured" time="0.058" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the shortname with units if abbreviation is not specifed and units are specified " time="0.042" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the full specified Name with units if abbreviation and shortName are not specifed and units are specified " time="0.041" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl getHeaderName "/>
    <testcase name="should return the values in comma seperated if there are multiple values" time="0.067" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return the values in by custom delimiter if specified and there are multiple values" time="0.046" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return just the value if there is only one value" time="0.05" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return yes/no if the concept is boolean" time="0.059" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return date if the concept datatype is date and not configured to show month and year" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return just month and year if the concept datatype is date and configured to show month and year" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return abbreviation of the coded answer if the concept is coded and configured to show abbreviation" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return shortName of the coded answer if the concept is coded and not configured to show abbreviation" time="0.044" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should return name of the coded answer if the concept is coded and not configured to show abbreviation and no shortname for the concept" time="0.037" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).obsToObsFlowSheet DisplayControl commafy "/>
    <testcase name="should set the patient and section on the scope" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AllObservationDetailsController"/>
    <testcase name="should fetch observations for encounter if the encounterUuid is provided" time="0.041" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should fetch observations for patient if the encounterUuid is not provided" time="0.037" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should fetch observations within daterange if you want to fetch program specific data." time="0.04" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should fetch the only the specific observation if observation uuid is specified in config" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should fetch observations for patient if the patientProgramUuid is provided" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should only fetch observations from config which are fully specified" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).BahmniObservation Initialization"/>
    <testcase name="should return observation grouped in conceptSortWeight order" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).grouping Observations"/>
    <testcase name="should process multiple select type to observation" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for single observation from form" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for single observation from form within multiple observations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for multiple observations from one form" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for obsGroup observations from one form" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for multiple observations from different form" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should display information when add more obs controls exist" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should display information in sequence as input for add more obs controls" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for single observation in section from form" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for section and non-inside section obs from form" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for section inside section with obs from form" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for section inside section with obs group from form" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should construct dummy obs group for single observation in section from form with multiple versions" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should hide section information when there is no input in the section" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should show section information when there is input in the section and no input in the outside obs" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should hide section information when there is no input in the section inside the section and input in outside obs" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should not fetch form details when observation is empty" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).FormHierarchyService"/>
    <testcase name="should call using order uuid if present" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should return title when show-title flag is true" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should set hideIfEmpty flag if the orders observations are empty" time="0.034" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should set showHeader flag if it is not present" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should not set showHeader flag if it is present" time="0.039" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should have children 1 section" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="1 section child should have children 1 h2 and 1 div" time="0.035" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should open the first and close the rest" time="0.067" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl"/>
    <testcase name="should show the noOrdersMessage when there is no order" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl noOrdersMessage"/>
    <testcase name="should not show the noOrdersMessage when there are orders" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrdersDisplayControl noOrdersMessage"/>
    <testcase name="should call using order uuid if present" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl"/>
    <testcase name="should have children 1 section" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl"/>
    <testcase name="section should have children 1 h2 and 1 section" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl"/>
    <testcase name="1 section child should have children 1 h2 and 1 div" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl"/>
    <testcase name="should show the noOrdersMessage when there is no order" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl noOrdersMessage"/>
    <testcase name="should not show the noOrdersMessage when there are orders" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl noOrdersMessage"/>
    <testcase name="should set the pacs image link to given url template when it does not have any placeholder" time="0.038" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl Pacs Image Link"/>
    <testcase name="should display message saying image not available when the image link is not servicable (when image is not available)" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl Pacs Image Link"/>
    <testcase name="should open image in new tab  when the image link is  servicable (when image is available)" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PacsOrdersDisplayControl Pacs Image Link"/>
    <testcase name="should get patient address with cityVillage when addressField is not specified in config" time="0.047" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should get patient name, age, gender, identifier and address even though config is empty" time="0.041" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should open patient dashboard with correct config Name" time="0.036" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should also get patient blood group attribute if it is directly specified" time="0.047" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should get patient address in the order of config specified" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return false if the relationshipTypeMap.provider object is empty" time="0.045" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return true if the relationship is provider" time="0.049" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return false if the relationship is patient" time="0.034" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return false if showDOB configured false" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return true by default if showDOB is undefined" time="0.045" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should get admission status when visit uuid is given" time="0.045" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient Profile display control"/>
    <testcase name="should return Yes when value is true" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).my boolean spec"/>
    <testcase name="should return No when value is false" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).my boolean spec"/>
    <testcase name="should return value otherwise" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).my boolean spec"/>
    <testcase name="has a titleCase filter" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).title case"/>
    <testcase name="should return true empty array " time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).title case"/>
    <testcase name="should fetch disease summary for a patient for a diseaseTemplate" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PivotTableService disease summary"/>
    <testcase name="Shows active programs and ended programs" time="0.084" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Program display control"/>
    <testcase name="should make a call to get specific program from a patient" time="0.057" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Program display control"/>
    <testcase name="should map values from the openmrs patientAttributeTypes to our patientConfig" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeFormatter"/>
    <testcase name="should map values from the openmrs patientAttributeTypes to attributes if already existing" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeFormatter"/>
    <testcase name="should filter unchanged attributes from mapped the openmrs attributes" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeFormatter"/>
    <testcase name="should remove unfilled attributes" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeFormatter"/>
    <testcase name="should map values from the openmrs patientAttributeTypes to our patientConfig" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeTypeMapper"/>
    <testcase name="should map name, datatypeClassname if description, format not there for attributeTypes" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeTypeMapper"/>
    <testcase name="should map dataType Config to pattern for RegexValidatedTextDatatype attributeTypes" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeTypeMapper"/>
    <testcase name="should map excludeFrom from config to attributeType" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AttributeTypeMapper"/>
    <testcase name="should map simple diagnosis" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should map diagnosis status" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should map first diagnosis" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should map saved diagnoses from current encounter" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should map simple diagnoses" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should map latest diagnosis" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Diagnosis Mapper"/>
    <testcase name="should return date value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return datetime value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return multiselect values" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return coded value" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return coded value when value has no name" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return value name when value is of type object" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return Yes when type is boolean and value is true" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should return No when type is boolean and value is false" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Value Mapper"/>
    <testcase name="should map dateCompleted" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientProgramMapper"/>
    <testcase name="should map outcome" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientProgramMapper"/>
    <testcase name="should not have time information in dateEnrolled" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientProgramMapper"/>
    <testcase name="should remove new observations without value" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should remove new observations which has value but voided " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should void existing observations without value" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should add existing observations when voided status has changed" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should remove new observations groups which has no valid members" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should void existing observations groups which has no valid members" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should reatin voided status for voided members with value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should not void existing observations groups which has mamber with value" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should remove new member observations without value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="should remove new member observations which are voided" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Filter filter"/>
    <testcase name="getAssignedBedForPatient should hit bedDetailsFromVisit search handler" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedService"/>
    <testcase name="getAssignedBedForPatient should hit regular resource handler" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bedService"/>
    <testcase name="should map before saving" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conditionsService save"/>
    <testcase name="should fetch from condition History Url" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conditionsService getConditionHistory"/>
    <testcase name="should fetch from conceptSearchByFullNameUrl" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conditionsService getFollowUpConditionConcept"/>
    <testcase name="should fetch encounterConfig from backend" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch patientConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch patientAttributesConfig from backend" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch dosageFrequencyConfig from backend" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch dosageInstructionConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch stoppedOrderReasonConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch consultationNoteConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch radiologyObservationConfig from backend" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch labOrderNotesConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch radiologyImpressionConfig from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch addressLevels from backend" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch allTestsAndPanelsConcept from backend" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch identifierTypesConfig from backend" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch relationshipTypes from backend" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch genderMap from backend" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should fetch loginLocationToVisitTypeMapping from backend" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).configurationService"/>
    <testcase name="should return dispositions by visit" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dispositionService"/>
    <testcase name="should return dispositions by patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dispositionService"/>
    <testcase name="should return disposition note concept" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dispositionService"/>
    <testcase name="should return disposition actions" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dispositionService"/>
    <testcase name="should fetch allowed list of locales" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).localeService"/>
    <testcase name="should fetch default locale" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).localeService"/>
    <testcase name="should fetch default login page text" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).localeService"/>
    <testcase name="should fetch default locale languages" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).localeService"/>
    <testcase name="should get locations by tag" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LocationService"/>
    <testcase name="should send empty string as query param if tags are not defined" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LocationService"/>
    <testcase name="should get location id for login location which is tagged as a Visit Location" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).LocationService"/>
    <testcase name="should fetch observations for encounter" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationsService fetchForEncounter"/>
    <testcase name="should fetch observations for patient program" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationsService fetchForPatientProgram"/>
    <testcase name="should send parameters specified in call to the server" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationsService getObsInFlowSheet"/>
    <testcase name="should fetch bahmni observation by uuid" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).observationsService fetch By Observation Uuid"/>
    <testcase name="should fetch all programs from backend and filter programs containing retired workflows and outcomes" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should group all programs into active/ended programs and sort them according to their dateEnrolled/dateCompleted respectively" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should enroll patient to a program" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should delete patient state" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should retrieve list of program attribute types" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should have attributes field in the response even though attributes are not registered" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService Program attributes"/>
    <testcase name="should have attribute representation" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService Program attributes"/>
    <testcase name="should have attribute name if description is not available" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService Program attributes"/>
    <testcase name="test savePatientProgram" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="test updatePatientProgram" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="test getProgramStateConfig" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should make a call to get specific program" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should get enrollment informantion for a patient with given patientUuid" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).programService"/>
    <testcase name="should initialise retrospective entry from the cookie" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).retrospectiveEntryService"/>
    <testcase name="should not initialise retrospective entry when there is no retrospective date cookie" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).retrospectiveEntryService"/>
    <testcase name="should reset retrospective entry if the selected date is in past" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).retrospectiveEntryService"/>
    <testcase name="should delete retrospective entry if the selected date is today" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).retrospectiveEntryService"/>
    <testcase name="should able to upload an image" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should able to upload a video" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should throw error when we upload a file which file type is not in video, image and pdf" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should make request to delete voided documents from disk" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should not make request to delete voided documents from disk if the image path is not present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should make request to delete only voided documents from disk if the image path is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should log when uploading files for a new visit and encounter" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService"/>
    <testcase name="should give file type as pdf for pdf mime type" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService getFileType"/>
    <testcase name="should give file type as pdf for image mime type" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService getFileType"/>
    <testcase name="should give file type as not_supported for any other mime type except image and pdf" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).visitDocumentService getFileType"/>
    <testcase name="Should call search url in registration visit service" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Registration Visit Service"/>
    <testcase name="Should call end visit url in registration visit service" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Registration Visit Service"/>
    <testcase name="Should post visit details to create visit url" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Registration Visit Service"/>
    <testcase name="Should post visitUUId and bahmniEncounterTransaction to endVisitAndCreateEncounterUrl" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Registration Visit Service"/>
    <testcase name="send input as null and to be null" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="ensure that the translationKey is used for translations" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send dashboard name as part of the object and ensure that it returns" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send title as part of the object and ensure that it returns" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send label as part of the object and ensure that it returns" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send display as part of the object and ensure that it returns" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send a string and ensure that it returns" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="send dashboard,title, and display as part of the object and ensure that dashboard returns" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bahmniTranslate"/>
    <testcase name="merge when both base, custom configs are there" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).mergeLocaleFilesService"/>
    <testcase name="return both base, custom locales when shouldMerge is false" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).mergeLocaleFilesService"/>
    <testcase name="should retrieve logs" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogService"/>
    <testcase name="should post logs" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).auditLogService"/>
    <testcase name="should be true when all values are not specified" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Age isEmpty"/>
    <testcase name="should be false when either years or months or days is specified" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Age isEmpty"/>
    <testcase name="should be true when all values are 0" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Age isEmpty"/>
    <testcase name="should return today when year, month and day are zero" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Age calculateBirthDate"/>
    <testcase name="should return date of birth" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Age calculateBirthDate"/>
    <testcase name="should return true if the visit has admission details" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary isAdmitted"/>
    <testcase name="should return false if the visit has no admission details" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary isAdmitted"/>
    <testcase name="should return true if the visit has discharge details" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary isDischarged"/>
    <testcase name="should return false if the visit has no discharge details" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary isDischarged"/>
    <testcase name="should return admission encounter uuid if the visit has admission details" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary getAdmissionEncounterUuid"/>
    <testcase name="should return undefined if the visit has no admission details" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary getAdmissionEncounterUuid"/>
    <testcase name="should return discharge encounter uuid if the visit has discharge details" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary getDischargeEncounterUuid"/>
    <testcase name="should return undefined if the visit has no discharge details" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitSummary getDischargeEncounterUuid"/>
    <testcase name="should filter saved orders before saving" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive edit-observation works properly"/>
    <testcase name="should update only specified observation in encounter observations before saving the encounter" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive edit-observation works properly"/>
    <testcase name="should validate form on save " time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive edit-observation works properly"/>
    <testcase name="should log the encounter edit after save" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive edit-observation works properly"/>
    <testcase name="should test print, toggle" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive show-observation works properly"/>
    <testcase name="dateString() should return only date" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive show-observation works properly"/>
    <testcase name="dateString() should return datetime" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive show-observation works properly"/>
    <testcase name="should open video in a new dialog" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive show-observation works properly"/>
    <testcase name="should return obs group value (comma separated values from the server side) for observation type grid" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return Yes or No translation keys for boolean values" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return concept short name or name if value is of type object" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return value shortname or name or just value" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return empty if no value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return comma separated values for observation type multiSelect" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should test MultiSelectObservations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Concept Set MultiSelectObservations"/>
    <testcase name="should test MultiSelectObservation" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Concept Set MultiSelectObservation"/>
    <testcase name="should test MultiSelectObservation has value" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Concept Set MultiSelectObservation"/>
    <testcase name="should test MultiSelectObservation has non voided value" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Concept Set MultiSelectObservation"/>
    <testcase name="should test MultiSelectObservation is valid" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation Concept Set MultiSelectObservation"/>
    <testcase name="should return yes and no for Boolean observation" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return translation keys for yes and no for Boolean observation" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return shortName if exists for coded observation" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return value for nonCoded observation" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return duration if present for an observation" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return datetime in specific format" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return empty if value is null" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should format date to bahmniDate  if value is of type date" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should format date in months and years if config is set to display in months and years" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should format date in text to months and years if config is set to display in months and years" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation display Value"/>
    <testcase name="should return concept is image" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Observation is Image Concept"/>
    <testcase name="should map openmrs observation types - coded, boolean" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationMapper should map observation"/>
    <testcase name="should map multiSelectObservations" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationMapper should map observation"/>
    <testcase name="should map multiSelectObservations at any level" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationMapper should map observation"/>
    <testcase name="should map grid observations" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationMapper should map observation"/>
    <testcase name="should map observations with similar concepts in sorted order of observationDateTime" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationUtil should map observation"/>
    <testcase name="should flatten all the observations" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationUtil flatten"/>
    <testcase name="should return the same if the passed object is a leaf observation" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ObservationUtil flatten"/>
    <testcase name="should initialize configurations and fetch patients" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController initialization"/>
    <testcase name="should search for patients with given search parameter" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController searchPatients"/>
    <testcase name="should navigate to patient dashboard when the filter yields a single patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController searchPatients"/>
    <testcase name="should return the patient count for the provided tab" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientCount"/>
    <testcase name="should call window open when forward url is given" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientCount"/>
    <testcase name="should not call window location when forward url is not given" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientCount"/>
    <testcase name="should print headings which are filtered from ignore headings list" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientListHeadings"/>
    <testcase name="should print headings which are filtered from ignore headings list and print headings list" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientListHeadings"/>
    <testcase name="should print page from the config" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController patientListHeadings"/>
    <testcase name="should accept the link column from the config, when respective config present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController isHeadingOfLinkColumn old link behaviour syntax"/>
    <testcase name="should accept the default link column, when nothing specified in the config" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController isHeadingOfLinkColumn old link behaviour syntax"/>
    <testcase name="should not have a link on the column, when no match for heading found in config and default column list" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController isHeadingOfLinkColumn old link behaviour syntax"/>
    <testcase name="should indicate if specified column in a link" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController isHeadingOfLinkColumn"/>
    <testcase name="should take the forward url from the links of searchType, if it is configured" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController forwardPatient"/>
    <testcase name="should take the forwardUrl from the searchType" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController forwardPatient"/>
    <testcase name="should take the forwardUrl from the query results, if one returned from the query" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController forwardPatient"/>
    <testcase name="should take the forwardUrl from the query results and have extra linkColumns specified in the config" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientsListController forwardPatient"/>
    <testcase name="should search the patients by both identifier and name" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatients"/>
    <testcase name="should search the patients by identifier" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsByIdentifier"/>
    <testcase name="should not fail if user search by any special characters" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsByIdentifier"/>
    <testcase name="should return the patient, when identifier is having special characters" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsByIdentifier"/>
    <testcase name="should search the patients by uuid" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsBySearchColumns"/>
    <testcase name="should search the patients only by name" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsBySearchColumns"/>
    <testcase name="should return empty list when invalid column names are configured" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search filterPatientsBySearchColumns"/>
    <testcase name="should set &apos;no results&apos; message when there is searchParamenter and results are empty" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search updateSearchResults"/>
    <testcase name="should not set &apos;no results&apos; message when there is no searchParamenter" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search updateSearchResults"/>
    <testcase name="should not set &apos;no results&apos; message when there are results" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search updateSearchResults"/>
    <testcase name="should be true when searchType is selected and is a look up and has search results" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should be true when searchType is selected" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should be false when searchType is a look up" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should be false when searchType is a look up" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should update the searchColumns on switchSearchType" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should update the searchColumns on switchSearchType, default to identifier and name if no searchColumns are configured" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should update the search links on switchSearchType" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Search showPatientCountOnSearchParameter for searchType"/>
    <testcase name="should return years when age is more than a year w.r.t reference date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dateToAge Filter"/>
    <testcase name="should return months when age is less than a year w.r.t reference date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dateToAge Filter"/>
    <testcase name="should return days when age is less than a month w.r.t reference date" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dateToAge Filter"/>
    <testcase name="should age w.r.t current time when reference date is not given" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dateToAge Filter"/>
    <testcase name="should return Unknown when gender char is null" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).gender Filter"/>
    <testcase name="should return respective mapped value" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).gender Filter"/>
    <testcase name="should assign identifier if primary identifier is undefined" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context mapper"/>
    <testcase name="should assign primary identifier if it is defined" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient context mapper"/>
    <testcase name="should map secondary identifier if primary identifier is undefined" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient mapper"/>
    <testcase name="should map primary identifier if it is there" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patient mapper"/>
    <testcase name="should make http call to get patient context" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientService getPatientContext"/>
    <testcase name="should return true if error present" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessageController method isErrorMessagePresent"/>
    <testcase name="should return concatenated message for the specified level" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessageController method getMessageText"/>
    <testcase name="should call messagingservice hideMessages" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessageController method hideMessage"/>
    <testcase name="should take the height of the element if the key is defined" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).assignHeight"/>
    <testcase name="should be undefined if the key is undefined" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).assignHeight"/>
    <testcase name="should hide the elements if the condition is false" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bmShowTest"/>
    <testcase name="should show the elements if the condition is true" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).bmShowTest"/>
    <testcase name="should set month and year from the date" time="0.031" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should display twelve months and number of years as per configuration" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should set the date to first of month" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should set illegal month/year false if month and year are undefined" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should set illegal year true if month is present and year is undefined or null" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should set illegal month true if year is present and month is undefined or null" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).monthyearpicker"/>
    <testcase name="should hide the elements if the condition to show is false" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ngConfirmClick"/>
    <testcase name="should show the elements if the condition to show is true" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ngConfirmClick"/>
    <testcase name="should make the element mandatory if nonBlank directive is present" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Non Blank"/>
    <testcase name="should apply the pattern and title to the element if it is part of field validation" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Pattern Validate"/>
    <testcase name="should not apply the pattern and title to the element if it is not part of field validation" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Pattern Validate"/>
    <testcase name="should not apply the pattern and title to the element if field validation is not present in scope" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Pattern Validate"/>
    <testcase name="should allow the first click" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).single click"/>
    <testcase name="should not allow any click until promise is resolved" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).single click"/>
    <testcase name="should allow the first submit" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).single submit"/>
    <testcase name="should not allow any submit until promise is resolved" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).single submit"/>
    <testcase name="should return the url with thumbnail when extension is not specified " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Filter: thumbnail"/>
    <testcase name="should return the url with thumbnail when extension is specified " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Filter: thumbnail"/>
    <testcase name="should listen for serverError events" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should add messages" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should add messages and set isServerError to true" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should clear all messages for a given level" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should add messages and set isServerError to true" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should not have multiple messages of same content" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should not have multiple messages of different content" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MessagingService"/>
    <testcase name="should load answers with given conceptName" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptDropdown"/>
    <testcase name="should load answers from given concept" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptDropdown"/>
    <testcase name="should load saved answer when default-concept is given" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptDropdown"/>
    <testcase name="should load saved answer when default-concept is not given" time="0.029" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).conceptDropdown"/>
    <testcase name="should update active programs list" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController"/>
    <testcase name="should return true if patient has enrolled to SomePrograms" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController"/>
    <testcase name="should return true if patient had enrolled in any past programs" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController"/>
    <testcase name="Should return minimum start date of states" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController get maximum allowed program enrollment date for edit flow"/>
    <testcase name="Should return current date when there are no states" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController get maximum allowed program enrollment date for edit flow"/>
    <testcase name="should remove latest program state" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController Remove program states"/>
    <testcase name="should be able to remove program state when it is the active state" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController Remove program states"/>
    <testcase name="should save program attributes" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController update attributes"/>
    <testcase name="should assign the initial state successfully" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should update patient program without any state if not provided" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should validate if state to be transited is starting after the current running state" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should transit from one state to another successfully only if different state is selected" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should not add transition to the state which is already active" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should show failure message on any server error with state transition" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController updatePatientProgram"/>
    <testcase name="should validate if program is ending before the current running state" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController end program"/>
    <testcase name="should end a program successfully" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController end program"/>
    <testcase name="Of un retired workflow" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController Should get states"/>
    <testcase name="should get unretired workflows for patient program" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController get workflows"/>
    <testcase name="confirmBox delete action should delete program" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController delete Program"/>
    <testcase name="confirmBox cancel action should not delete the program" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController delete Program"/>
    <testcase name="should hide attributeType for selected program if it is excluded in the config" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController attributeTypes"/>
    <testcase name="should show attributeType for selected program if it is not excluded in the config" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ManageProgramController attributeTypes"/>
    <testcase name="Get program attributes map from program" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive program-attributes works properly"/>
    <testcase name="Get the converted Date value for an Attribute Type of Date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive program-attributes works properly"/>
    <testcase name="Get the value for an Attribute Type of Regex" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive program-attributes works properly"/>
    <testcase name="Get the value as Short Name of Answer selected for an Attribute Type of CodedConcept" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ensure that the directive program-attributes works properly"/>
    <testcase name="should filter programs by program attributes from config" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ProgramAttributes display control"/>
    <testcase name="should convert difference in dates to months" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AgeUtil differenceInMonths"/>
    <testcase name="should round months to 2 decimals" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AgeUtil differenceInMonths"/>
    <testcase name="should take the current date if end date is not given" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AgeUtil differenceInMonths"/>
    <testcase name="should convert given months to age" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AgeUtil monthsToAge"/>
    <testcase name="should return date without time" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).getDateWithoutTime"/>
    <testcase name="should return null if date provided is null" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).getDateWithoutTime"/>
    <testcase name="should parse datetime string format" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil"/>
    <testcase name="should be true if two dates and times are same" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil isSameDateTime"/>
    <testcase name="should be true if two dates are same irrespective of time" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil isSameDate"/>
    <testcase name="should calculate difference between dates when month and day are same" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays"/>
    <testcase name="should calculate difference between dates when month of fromDate is lesser than month of toDate" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays"/>
    <testcase name="should calculate difference between dates when date of fromDate is greater than date of toDate" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays"/>
    <testcase name="should calculate difference between dates when fromDate is non-leap year" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays when fromDate is february"/>
    <testcase name="should calculate difference between dates when fromDate is leap year" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays when fromDate is february"/>
    <testcase name="should calculate difference between dates when month previous to toDate has 30 days" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays when day of fromDate is lesser than day of toDate"/>
    <testcase name="should calculate difference between dates when month previous to toDate has 30 days" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInYearsMonthsDays when day of fromDate is lesser than day of toDate"/>
    <testcase name="should return 0 when dates are same" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDaysRegardlessOfTime"/>
    <testcase name="should not change the date time" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDaysRegardlessOfTime"/>
    <testcase name="should return 10 when dates are 10 days apart, regardless of time" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDaysRegardlessOfTime"/>
    <testcase name="should return 1 when date and reference date are same" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDayNumber"/>
    <testcase name="should return 2 when date and reference date are in differnt days and difference is less than 24 hrs" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDayNumber"/>
    <testcase name="should return 2 when date and reference date are in differnt days and difference is between 24 hrs to 48 hrs" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDayNumber"/>
    <testcase name="should return date from a given duration" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getEndDateFromDuration"/>
    <testcase name="should take a long representation of date and format" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithTime"/>
    <testcase name="should take a string representation of date and format" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithTime"/>
    <testcase name="should not break for undefined and return null" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithTime"/>
    <testcase name="should return the original string if it cannot be formatted" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithTime"/>
    <testcase name="should take a long representation of date and format" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithoutTime"/>
    <testcase name="should take a string representation of date and format" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithoutTime"/>
    <testcase name="should not break for undefined and return null" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithoutTime"/>
    <testcase name="should return the original string if it cannot be formatted" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateWithoutTime"/>
    <testcase name="should take a long representation of date and format" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatTime"/>
    <testcase name="should take a string representation of date and format" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatTime"/>
    <testcase name="should not break for undefined and return null" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatTime"/>
    <testcase name="should return the original string if it cannot be formatted" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatTime"/>
    <testcase name="should return 0 for difference of same date" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDays"/>
    <testcase name="should return 1 for difference of one day" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDays"/>
    <testcase name="should return 365 for difference of one year" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil diffInDays"/>
    <testcase name="should return date without time" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDateWithoutTime"/>
    <testcase name="should return null if date provided is null" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDateWithoutTime"/>
    <testcase name="should return date with months and years" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDateWithMonthsAndYears"/>
    <testcase name="should return date in dd MMM yy format when date with yyyy-MM-dd format is passed" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateInStrictMode"/>
    <testcase name="should return date in dd MMM yy format when date with yyyy-MM-ddTHH:mm:ss.SSSZ is passed" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateInStrictMode"/>
    <testcase name="should return the string if the format does not match yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.SSSZ" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil formatDateInStrictMode"/>
    <testcase name="should return the date in the specified format, say &quot;dddd, MMMM Do YYYY&quot;" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDateTimeInSpecifiedFormat"/>
    <testcase name="should return null if date is not passed and say format is &quot;dddd, MMMM Do YYYY, HH:mm:ss&quot;" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DateUtil getDateTimeInSpecifiedFormat"/>
    <testcase name="include js" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DynamicResourceLoader"/>
    <testcase name="include css" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DynamicResourceLoader"/>
    <testcase name="should get the value as `null` when nothing is stored in cookie against the key" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).init"/>
    <testcase name="should get the actual value from cookie store" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).init"/>
    <testcase name="should set offline options when config is set true" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).offlineStatusService"/>
    <testcase name="should set offline options when config is not given" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).offlineStatusService"/>
    <testcase name="should replace all the spaces with hyphens to make it a valid html id value" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).stringFormat toValidId"/>
    <testcase name="should replace nothing" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).stringFormat toValidId"/>
    <testcase name="should call the custom validators" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ValidationUtil"/>
    <testcase name="should return the error message when the predicate fails" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ValidationUtil"/>
    <testcase name="should return nothing when the custom validator is not present" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ValidationUtil"/>
    <testcase name="should not be valid date if date overlaps with existing visit" time="0.025" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController checkValidityOfDate"/>
    <testcase name="should not be valid date if date overlaps with existing visit when the visit has no end date" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController checkValidityOfDate"/>
    <testcase name="should save the visit document" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController patient document save"/>
    <testcase name="should save the existing visit data even there is invalid date entered under new visit section" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController patient document save"/>
    <testcase name="Should return true if the provider is same as the user" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController can delete file "/>
    <testcase name="Should return false if the provider is not same as the user" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController can delete file "/>
    <testcase name="Should return true if the obs is new" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController can delete file "/>
    <testcase name="Should remove the current order when both orders are same" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController Validate Order"/>
    <testcase name="Should open a new visit when new visit is not the current one" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController Validate Order"/>
    <testcase name="should save the image file" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController OnSelect"/>
    <testcase name="should save the pdf file" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController OnSelect"/>
    <testcase name="should show error message dialog box when user uploads a video" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController OnSelect"/>
    <testcase name="should show error message dialog box when user uploads a file which is not image and pdf" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentController OnSelect"/>
    <testcase name="should have concept name when concept is present" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentImage getTitle"/>
    <testcase name="should have observation date when present" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentImage getTitle"/>
    <testcase name="should be blank when concept is absent" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).DocumentImage getTitle"/>
    <testcase name="should sort by id in ascending order" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  sortSavedFiles "/>
    <testcase name="should assign image index to the image files excluding pdf files" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  assignImageIndex"/>
    <testcase name="should assign image index to the image files when a new image file is added" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  assignImageIndex"/>
    <testcase name="should not change the image index of image files when a new pdf file is added" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  assignImageIndex"/>
    <testcase name="should not update the image index of image files when an unsaved image file is removed" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  assignImageIndex"/>
    <testcase name="should return false if the visit has newly added file and concept associated with it." time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return true if the visit has newly added file and no concept associated with it." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return true if the visit has newly added file and editable name is undefined." time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return true if the visit has newly added file and uuid is undefined." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return false if the file is voided and it has errors" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return false if the file is voided and it has no errors" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return true if one of the newly added file has errors." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  has errors"/>
    <testcase name="should return true if it has visit type uuid." time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  hasVisitType"/>
    <testcase name="should return false if it don&apos;t have visit type uuid." time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  hasVisitType"/>
    <testcase name="should return false if it don&apos;t have visit type." time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  hasVisitType"/>
    <testcase name="should map the observation to document from same encounter." time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  initSavedFiles"/>
    <testcase name="should map the observation to document from different encounters." time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Visit  initSavedFiles"/>
    <testcase name="should test user is authenticated or not" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController"/>
    <testcase name="should convert the password policies" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController"/>
    <testcase name="should check if new password and confirm password matches or not" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController"/>
    <testcase name="should not call change password if old password or new password or confirm password are empty" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController"/>
    <testcase name="should redirect to dashboard" time="0.349" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController"/>
    <testcase name="should change the password" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController change password"/>
    <testcase name="should clear the password fields" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ChangePasswordController change password"/>
    <testcase name="should return true, if the extension has exclusiveOnlineModule configuration set to true and Device is in online state" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should return false, if the extension has exclusiveOnlineModule configuration set to true and Device is in offline state" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should return true, if the extension has exclusiveOnlineModule configuration set to false and Device is in offline state" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should return true, if the extension has exclusiveOnlineModule configuration set to false and Device is in online state" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should return true, if the extension has exclusiveOfflineModule configuration set to true and Device is in online state" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should return false, if the extension has exclusiveOfflineModule configuration set to true and Device is in offline state" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).dashboardController"/>
    <testcase name="should localServer exist" time="0.042" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="should loginUser methode called" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="should show error message if time zone is different" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="getLoginText should give proper value" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="login" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="audit log the successful login attempt" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="audit log the failed login attempt with username" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="should not audit log the login attempt if logging is disabled" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="should not audit log the login attempt if username is undefined" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController login"/>
    <testcase name="should map only allowed locales " time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController"/>
    <testcase name="should assign code when nativeName not found " time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).loginController"/>
    <testcase name="should get active encounter" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should get orders for given order type " time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should toggle showForm value" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should filter active encounter observations for order" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should auto open the order section with observations " time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should return true if form is valid " time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should return true if form is valid " time="0.039" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should show error message if form is not valid " time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="should give message for empty order" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentController"/>
    <testcase name="Should be a function" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentConfig Factory"/>
    <testcase name="Should not return null" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentConfig Factory"/>
    <testcase name="Should fetch concept set members" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentConfig Factory"/>
    <testcase name="Should return a config based on the fetched concept set members" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OrderFulfillmentConfig Factory"/>
    <testcase name="should add order uuid to observations" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="should save encounter with observations having value only" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="should void existing observations without any values" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getOrders should return orders and observations based on orderType if specified" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getOrders should return orders and observations based on orderUuid if specified" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getOrders should return orders and observations based on visitUuid if specified" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getOrders should make http get request with params which are truthy" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getOrders should make http get request with location uuids when specified" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Service"/>
    <testcase name="getCalculatedDose should not call to service when rule is undefined" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Set Service"/>
    <testcase name="getCalculatedDose should not call to service when rule is null" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Set Service"/>
    <testcase name="getCalculatedDose should round off the dose for special dose unit" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Set Service"/>
    <testcase name="getCalculatedDose should not round off the dose when it is less than 0.49" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Set Service"/>
    <testcase name="getCalculatedDose should round off the dose to 0.1 when it is less than 0.1" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Set Service"/>
    <testcase name="Cache order types after initial load" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Type Service"/>
    <testcase name="getOrderTypeUuid should return the uuid of existing OrderType" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Type Service"/>
    <testcase name="getOrderTypeUuid should return null for non existing OrderType" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Order Type Service"/>
    <testcase name="should update the status of the appointment with status" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendar view cancel appointment controller"/>
    <testcase name="should close the dialog when user clicks on close button" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendar view cancel appointment controller"/>
    <testcase name="should give cancelled message when the appointment is cancelled" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendar view cancel appointment controller"/>
    <testcase name="should give postponed message when the appointment is postponed" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendar view cancel appointment controller"/>
    <testcase name="should go to the previous date on click of left arrow" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to the next date on click of right arrow" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to the current date on click of today" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should search the patient with the given search string" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should add the patient info onto the filter parameters on selecting the patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should clear the patient filter from filter parameters upon clearing the patient info" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should map the response of search results from the server and add label field" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should clear all the filters" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should apply all the filters" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should initialize the filter data" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="Should initialize the filter data from stateParams if present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should navigate to edit surgical block page with surgicalBlock details clicking edit button" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should navigate to edit surgical block page  with surgical block and appointment details on clicking edit button" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should navigate to the cancel appointment dialog box when a cancel Appointment is clicked" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should navigate to the cancel block dialog box when a cancel block is clicked" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to the current week on click of week" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to next week on click of right arrow in week view" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to previous week on click of left arrow in week view" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should set scope params to state params if state params are present" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to calendar view on click of calendar button" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should go to list view on click of list view button" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should select the completed, scheduled appointment status when patient is selected on Calendar view and no statusList is empty" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should not change the filter status list when some status filters are applied on selection of patient " time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should not change the filter status list on patient select in  list view " time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should fire $watch when the view is changed to Calendar" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should fire $watch when the view is changed to List View" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="move button should be disabled by default" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should navigate to the move appointment dialog box when a move Appointment is clicked" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should disable move button when user selects surgical block" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should disable move button when user deselects surgical block" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should disable move button when user selects surgical appointment but status is not Scheduled" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should enable move button when user selects surgical appointment but status is Scheduled" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should take stateParams viewDate when it is present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should appointmentList include &apos;postponed&apos; and &apos;cancelled&apos; status when user comes from surgical queues to listview" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).calendarViewController"/>
    <testcase name="should save status with cancelled when user cancelled a surgical block" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).cancelSurgicalBlockController"/>
    <testcase name="should save status with postponed when user postponed a surgical block" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).cancelSurgicalBlockController"/>
    <testcase name="should sort the appointments by start date and by the location and by start time" time="0.04" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should set the derived attributes for appointments" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should print the page with the surgical appointment list" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should print the page with the default list view when configuration template url is not there" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should sort appointments by the sort column" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should reverse sort appointments if sorted on the same column consecutively" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should emit an event when surgical appointment is selected in list view" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should emit an event when surgical appointment is deselected in list view" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="isStatusPostponed should return true if status is postponed" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="isStatusPostponed should return false if status is not postponed" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="isStatusCancelled should return true if status is cancelled" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="isStatusCancelled should return false if status is not cancelled" time="0.039" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should have bed location and bed id in table info" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).listViewController"/>
    <testcase name="should have appointment, block and appointment duration" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should close ngDialog when user clicks on cancel button" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should not get surgical blocks when no date selected" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should get the surgical blocks for that date when user selects a date" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should be able to move surgical appointment to selected surgical block" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should throw a message when no surgical blocks are available for that day" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should not be able to move to the same surgical block" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).moveSurgicalAppointmentController"/>
    <testcase name="should map the display name for patients" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should save data in proper format " time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should search the patient, when patientinfo passed to it" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should close the dialog when clicked on close" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should initialize scope variables for appointment with data from the dialogData in edit appointment mode" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should only initialize the attributes, attributeTypes, when dialogData is not provided, in create appointment mode" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should disable the edit patient name when trying to edit the saved surgical appointment" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should enable the edit patient name when trying to edit the unsaved surgical appointment" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should deep clone the surgeon for other surgeon" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should open the patient program dashboard when user click on patient name in edit mode" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should open the patient clinical dashboard when user click on patient name in edit mode" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should throw error when the forward url configured for the patient is invalid, all the required params are not present on the scope" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should set appointment status to scheduled by default" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should pull procedures,estimated hours and estimated minutes" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should remove isBeingEdit field for appointment which is selected when user clicks on cancel the changes" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).newSurgicalAppointmentController"/>
    <testcase name="should calculate the no. of intervals for the calendar" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should give the rows for the calendar" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should fetch the locations with operation theater tag" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should group the surgical blocks by the location" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should set the day view split as integer" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should set the calendarStartDatetime and calendarEndDatetime" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarController"/>
    <testcase name="should calculate start time and end time for the appointment" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should give the startTime and endTime if they exists in surgical appointment" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should add the startTime, endTime and notes for the appointment" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should make actual start time and actual end time mandatory when actual start time is filled" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should make actual start time and actual end time not mandatory when all the fields on the dialog are empty" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should add the appointment for update" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should throw error message when actual start time is greater than actual endtime" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentActualTimeController"/>
    <testcase name="should get the surgeon Names from openMRS" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should not invalidate start datetime or end datetime when either of them is missing" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should validate a form having end date greater than start date" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should not validate a form having end date less than start date" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should not validate a form having invalid data" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should throw message if the surgical form is not valid on save" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should throw message if the surgical appointments duration exceeds the the block duration" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should save a valid surgical form" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should update a valid surgical form" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should get the patient name of surgical appointment" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should go to home page" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should open an ngDialog with data of given surgical appointment" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should open an ngDialog with data of given surgical appointment for editing the the appointment" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should throw an error if the newly added surgical appointment is not fitting into the surgical block time" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should throw an error if the existing surgical appointment duration is modified and it is not fitting into the surgical block time" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should add the surgical appointment if the newly added surgical appointment is fitting into the surgical block time" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should update the existing appointment with updated values if it is fitting into the surgical block time" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should initialize the controller and map the surgical block from the server format to surgical form for UI, and should map the remaining attribute apart from the saved ones from attribute types" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should update the sort weight of surgical appointments with the index of the appointment" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should open the surgical appointment for edit when appointment id is provided in stateparams" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should open an ngDialog with data of given surgical appointment for cancelling an appointment" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should disable the cancel block button when surgical block has completed appointments" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should disable the cancel block button when surgical block is not saved" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should populate end date if start date is entered and end date is undefined" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should not populate end date if start date is entered and end date in already present" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should remove isBeingEdited field for other appointments which are not selected" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockController"/>
    <testcase name="should update the status of the appointment with status for saved appointment" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should update the status of the appointment with status for saved appointment" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should update the status of the appointment with status for saved appointment" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should update the status of the appointment with status for saved appointment" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should close the dialog when user clicks on close button" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should delete isBeingEdited field while postpone/cancel the appointment" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgical block view cancel appointment controller"/>
    <testcase name="should set the attributes of the surgical appointment" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="should calculate the height of the surgical appointment" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="should format the patient&apos;s name for display" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="should emit an event when surgical appointment is selected" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment not be hidden, if the filter param doesn&apos;t have any patient and status filters" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment not be hidden, if the filter param have same patient as that of surgical appointment and no status filters" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment be hidden, if the filter param have any patient and no status filters" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment not be hidden, if the filter param have same status as that of surgical appointment and no patient filters" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment be hidden, if the filter param have status otherthan the surgical appointment status and no patient filters" time="0.047" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment not be hidden, if the filter param have same status and patient as that of surgical appointment status and patient" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment be hidden, if the filter param status and patient different from that of surgical appointment" time="0.023" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment be hidden, if the filter param patient matches with surgical appointment patient but not the status" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment be hidden, if the filter param status matches with surgical appointment status but not the patient" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="Should the surgicalAppointment not be hidden, if the filter param status and patient both matches with surgical appointment status and patient" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalAppointment"/>
    <testcase name="should calculate the dimensions of the surgical block" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should set the color from the config" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should emit an event when surgical block is selected" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should calculate estimated duration, expectedStartDatetime and expectedEndDatetime for a surgical appointment" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should return false if block end time does not exceed the calendar end time" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should return true if block end time exceeds the calendar end time" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).otCalendarSurgicalBlock"/>
    <testcase name="should convert the string into number" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).stringToNumber"/>
    <testcase name="Should not filter the blocks, when no filters were given" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter the blocks with given filter location" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter the blocks with given filter providers" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter the blocks with given filter providers and locations" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter the blocks with given patientUuid, i.e. atleast one surgical appointment in the block with the patientUuid" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter the blocks with given patient and locations and providers" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="Should filter surgical blocks with given appointment status, i.e. atleast one surgical appointment in the block with the appointment status" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="should filter surgical blocks when multiple filter inputs are given such as providers, locations, patient, status" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockFilter"/>
    <testcase name="should filter the providers by name" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should remove the not existed provider names from the list" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should get the duration in minutes" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should map the surgical appointment attribures values to name and shout get the appointment duration in minutes" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should give all surgical appointments by status when the status list provided is empty or undefined" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should filter appointments by the status list" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should filter appointments by patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should calculate the duration of the appointment when some fields are empty" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentHelper"/>
    <testcase name="should give the block duration" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockHelper"/>
    <testcase name="should not consider postponed and cancelled appointments while calculating available block duration" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalBlockHelper"/>
    <testcase name="Should map the openmrsSurgicalBlock with appointments and appointment attributes to the UISurgicalBlock" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SurgicalBlockMapper"/>
    <testcase name="Should map the UISurgicalBlock with appointments and appointment attributes to the openmrsSurgicalBlock" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SurgicalBlockMapper"/>
    <testcase name="Should add the missing attributes to UISurgicalBlock attributes from the attributeTypes and default values for cleaningTime, estTimeHours, estTimeMinutes" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SurgicalBlockMapper"/>
    <testcase name="service should retrieve" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Query Service"/>
    <testcase name="should retrieve providers" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentService"/>
    <testcase name="should save providers" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentService"/>
    <testcase name="should get the surgical block with given block uuid" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentService"/>
    <testcase name="should get the surgical blocks in the given date range with custom representation" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentService"/>
    <testcase name="should update the saved surgical Block" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).surgicalAppointmentService"/>
    <testcase name="should populate default fields in registration form" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should expand the section if configured true via config" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should expand the section when there are any default values specified for an attribute in that section" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should do nothing if defaults are not specified" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should populate patient address levels" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should create a patient and go to edit page" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should create a patient with custom id and go to edit page" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should open the pop up when the custom identifier is greater then the next identifier in the sequence" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should not open the pop up when the custom identifier is less then the next identifier in the sequence" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should create patient when the user says yes to the pop up" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should not create patient when the user says no to the pop up" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should validate duplicate identifier entry in connect app and display error message" time="0.019" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should return true if there is disablePhotoCapture config defined to be true" time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientController"/>
    <testcase name="should set read only fields after save" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditPatientController"/>
    <testcase name="should expand the section when there are any default values specified for an attribute in that section" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditPatientController"/>
    <testcase name="should expand the section when there are saved values in the section" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditPatientController"/>
    <testcase name="should return true if there is disablePhotoCapture config defined to be true" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EditPatientController"/>
    <testcase name="checks that the confirmation popup is prompted when the home button is clicked and the config is enabled and current Page is not the Registration Second Page" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="checks that the confirmation popup is not prompted when the home button is clicked and the config is disabled" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="checks that the confirmation popup is not prompted on the Registration second page when the home button is clicked and the config is enabled" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="should make calls for reason for death global property and concept sets" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="should show caste same as last name if the configuration is set to true" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="should show caste same as last name if the configuration is set to true irrespective of patient attribute case sensitivity" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="should not show caste same as last name if the configuration is set to true, but person attribute caste is not there" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="showBirthTime should be true by default" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="showBirthTime should be false if set false" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController"/>
    <testcase name="should show additional attributes section if age is less than 18 on page load" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should hide additional attributes section if age is greater than 18 on page load" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should hide caretaker attributes section if legalRepAlsoCaretaker is selected as &apos;No&apos;" time="0.024" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should hide caretaker attributes section on page load" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should show or hide caretaker attributes section if legalRepAlsoCaretaker value changes " time="0.016" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should hide additional attributes section if age is greater than 18 on value change" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientCommonController show or hide sections"/>
    <testcase name="should initialize scope with name search params from url and load the patients if a name search parameter is provided" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url"/>
    <testcase name="should initialize scope with id search params from url but do not search for patient" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url"/>
    <testcase name="should not search for patients if search parameter is not provided" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url"/>
    <testcase name="should set the search results" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url on then"/>
    <testcase name="should not show the &apos;no results found message&apos; when patient is found" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url on then"/>
    <testcase name="should show &apos;no results found message&apos; when patient is not found" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController On changing the search parameter in url on then"/>
    <testcase name="should go to search page with name" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchByVillageAndName"/>
    <testcase name="should go to search page with village" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchByVillageAndName"/>
    <testcase name="should go to search page with localName if showLocalNameSearch has been set" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchByVillageAndName"/>
    <testcase name="should go to search page with programAttribute if programAttributesSearchConfig has been set" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchByProgramAttribute"/>
    <testcase name="should not go to search page with programAttribute if programAttributesSearchConfig has not been set" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchByProgramAttribute"/>
    <testcase name="should search by patient identifier when registrationNumber is present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById"/>
    <testcase name="should show the spinner while searching" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById"/>
    <testcase name="should change the search parameter to patient identifier" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById"/>
    <testcase name="should change the search parameter to patient identifier with programAttributesSearchConfig" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById"/>
    <testcase name="should not search if registrationNumber is not present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById"/>
    <testcase name="should go to edit patient when a patient is found" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById on success"/>
    <testcase name="should show &apos;no patient found message&apos; when patient is not found" time="0.021" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController searchById on success"/>
    <testcase name="should return undefined on empty result object passed" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController getProgramAttributeValues"/>
    <testcase name="should return programAttribute on result object passed and programAttributesSearchConfig is not configured" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController getProgramAttributeValues"/>
    <testcase name="should return programAttribute on result object passed and programAttributesSearchConfig is configured" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController getProgramAttributeValues"/>
    <testcase name="should return comma separated program attribute values when programAttributesSearchConfig is configured" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController getProgramAttributeValues"/>
    <testcase name="should check if the address fields are valid" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).SearchPatientController getProgramAttributeValues"/>
    <testcase name="should set the patient from patient data" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController initialization"/>
    <testcase name="should validate save and reload current page if afterVisitSaveForwardUrl not specified" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController submit"/>
    <testcase name="should validate save and redirect to url specify by afterVisitSaveForwardUrl" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController submit"/>
    <testcase name="should set the cookie with the current provider" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController submit"/>
    <testcase name="should set the visitUuid and canCloseVisit if there is an active visit for the patient" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close active visit"/>
    <testcase name="should not set the visitUuid and canCloseVisit if there is no an active visit for the patient in that location" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close active visit"/>
    <testcase name="should NOT set the visitUuid and canCloseVisit if there is no active visit for the patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close active visit"/>
    <testcase name="should return message" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController getMessage"/>
    <testcase name="should close visit on confirmation" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close visit"/>
    <testcase name="should not close visit when cancelled" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close visit"/>
    <testcase name="should show error message when the patient is not discharged" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController close visit"/>
    <testcase name="update patient image" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController"/>
    <testcase name="should check if it is a form template" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController"/>
    <testcase name="should not call save twice" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController"/>
    <testcase name="should not call save twice for a visit" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).VisitController"/>
    <testcase name="should update tehsil, district and state" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController village selection"/>
    <testcase name="should not update tehsil, district and state when selected village does not have parents" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController village selection"/>
    <testcase name="should clear address and selectedValue of all other auto completed child fields" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController Editing any auto complete field"/>
    <testcase name="should remove the address field from autocompleted list on edit" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController Editing any auto complete field"/>
    <testcase name="should make all parent levels as strict autocomplete fields starting from configured address level" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController initialise strict entry flag of address levels"/>
    <testcase name="should make all levels as freetext if &apos;strictAutoCompleteFromLevel&apos; configuration is not present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).AddressFieldsDirectiveController initialise strict entry flag of address levels"/>
    <testcase name="should set the forwardActionKey to configAction, If config is defined for Extensions" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the forwardActionKey to undefined, If config is not defined for Extensions" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the forwardActionKey to enterVisitDetails, If forwardUrls and Extensions are not configured" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the forwardActionKey to enterVisitDetails, If forwardUrls is configured and a match not found with active visit type" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the forwardActionKey to forwardAction, If forwardUrls is configured and a match found with active visit type" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the forwardActionKey to forwardAction, If forwardUrls is configured and a match found with active visit type and no translationKey on matched entry" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set the submitSource to startVisit on selecting the visitType" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should create a new Visit on selecting the visitType and submitSource set to startVisit, if forwardUrl is present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should create a new Visit on selecting the visitType and submitSource set to startVisit, if forwardUrl is not present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should go to configured forwardUrl, if the submitSource is forwardAction" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should go to enterVisitDetails page, if the submitSource is enterVisitDetails" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should go to cofingAction forwardUrl, if the submitSource is configAction and there is an active visit" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should create a visit and go to configAction forwardUrl, if the configAction forwardUrl present and the submitSource is configAction and there is no active visit" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should create a visit and go to visitDetails page, if the configAction forwardUrl not present and the submitSource is configAction and there is no active visit" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should create a visit and go to visitDetails page, if the configAction forwardUrl not present and the submitSource is configAction and there is no active visit" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set showStartVisitButton to true, if showStartVisitButton config is not present" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set showStartVisitButton to false, if showStartVisitButton config is false" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should set showStartVisitButton to false, if showStartVisitButton config is true" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientAction when there is no patientUuid on the stateParams"/>
    <testcase name="should remove newly added relationship" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Remove relationship"/>
    <testcase name="should void the existing relationship" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Remove relationship"/>
    <testcase name="should have called providerService for Doctor" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Search by patient identifier"/>
    <testcase name="should call patientService for relative with given limit and search attribute" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Search by patient identifier or name"/>
    <testcase name="should call patientService for relative with default limit and given search attribute" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Search by patient identifier or name"/>
    <testcase name="should not call patientService for relative if search term length is less than config" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController Search by patient identifier or name"/>
    <testcase name="shouldGiveTrueAlreadyExistingRelationship" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldGiveFalseIfRelationshipIsNotAlreadyPresent" time="0.049" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldNotConsiderDeletedRelationsDuringDuplicateRelationValidation" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldGiveFalseIfPersonIsPresentInMultipleRelationButRelationTypesAreDifferent" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldGiveFlaseIfRelationTypeIsNotPresentInRelationship" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldGiveFalseIfRelativeIsNotPresentInRelationship" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController duplicateRelationship"/>
    <testcase name="shouldGiveTrueIfTheRelationDoesNotHaveRelativeDetails" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isInvalidRelation"/>
    <testcase name="shouldGiveTrueForDuplicateRelation" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isInvalidRelation"/>
    <testcase name="shouldGiveFalseIfItHasUniqueRelativeDetails" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isInvalidRelation"/>
    <testcase name="should clear personB from relationship if patientIdentifier does not present in relationship" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearPatient"/>
    <testcase name="should not clear personB from relationship if patientIdentifier is present in relationship" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearPatient"/>
    <testcase name="should map personB to relationship" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController patientSelected"/>
    <testcase name="should give patient list from response" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getPatientList"/>
    <testcase name="should give undefined as patient list from response is not present" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getPatientList"/>
    <testcase name="should return true if the relationship type is patient" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isPatientRelationship"/>
    <testcase name="should return false if the relationship type is not patient" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isPatientRelationship"/>
    <testcase name="should return true if the relationship type is provider" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isProviderRelationship"/>
    <testcase name="should return false if the relationship type is not provider" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isProviderRelationship"/>
    <testcase name="should return provider when provider relationship is chosen" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getChosenRelationshipType"/>
    <testcase name="should return patient when patient relationship is chosen" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getChosenRelationshipType"/>
    <testcase name="should return undefined when no relationship is chosen" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getChosenRelationshipType"/>
    <testcase name="should clear the relationship data" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearRelationshipRow"/>
    <testcase name="should have called providerService when get provider list is called" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearRelationshipRow"/>
    <testcase name="should remove placeholder relationship rows when the current row is cleared" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearRelationshipRow"/>
    <testcase name="should add placeholder relationship rows when the current empty row is populated" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController clearRelationshipRow"/>
    <testcase name="should return true if relationship type is not selected" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController isEmpty"/>
    <testcase name="should delete personB on editing provider autocomplete" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController onEdit"/>
    <testcase name="should show &apos;person not found&apos; message when user enters invalid patient identifier" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController showPersonNotFound"/>
    <testcase name="should show not show &apos;person not found&apos; message when the user has not searched for any patient" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController showPersonNotFound"/>
    <testcase name="should filter only the providers who are linked to person " time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getProviderDataResults"/>
    <testcase name="should return B is to A relationship name if the patient is Person B" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getRelationshipTypeForDisplay"/>
    <testcase name="should return A is to B relationship name if the patient is Person A" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getRelationshipTypeForDisplay"/>
    <testcase name="should get the name of the person whom the patient is related to" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientRelationshipController getRelatedToPersonForDisplay"/>
    <testcase name="should update tehsil, district and state" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController village selection"/>
    <testcase name="should not update tehsil, district and state when selected village does not have parents" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController village selection"/>
    <testcase name="should clear all other auto completed fields" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController Editing any auto complete field"/>
    <testcase name="should update value of field on clear" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController Editing any auto complete field"/>
    <testcase name="should no update addressCode value on clear of field any field that doesnt have selectedUserGeneratedIds" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController Editing any auto complete field"/>
    <testcase name="should retrieve addresses based on parent uuid when parent has been specified" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController getAddressEntryList"/>
    <testcase name="should work with parent uuid when fields are cleared in between" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController getAddressEntryList"/>
    <testcase name="should not throw an error when response is not present" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController populateSelectedAddressUuids"/>
    <testcase name="should recusive call for populateSelectedAddressUuids" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController populateSelectedAddressUuids"/>
    <testcase name="should set selectedValue to null on editing the field" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController clear fields when parent field is cleared"/>
    <testcase name="should make all parent levels as strict autocomplete fields starting from configured address level" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController initialize controller"/>
    <testcase name="should make all levels as freetext if &apos;strictAutoCompleteFromLevel&apos; configuration is not present" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController initialize controller"/>
    <testcase name="should intialize selectedValue only for strict autocomplete fields" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController initialize controller"/>
    <testcase name="should enable all free text fields irrespective of parent has value or not" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).TopDownAddressFieldsDirectiveController Enable &amp; disable address fields"/>
    <testcase name="should map angular patient model to openmrs patient" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should map age to birthdate" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should map birthdate to age and birthdate" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should not use age when birthdate is present" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should strip data prefix when image is a jpeg data url" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should map image if it is a data image" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should not fail when image not present" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).CreatePatientRequestMapper"/>
    <testcase name="should map values from the openmrs Patient to our patient object" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map attributes from openmrsPatient to our patient object" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map birth date in dd-mm-yyyy format" time="0.043" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should not fail when birthdate is null" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map registration date" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should populate birthdate and age if birthdate is not estimated" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should not fail if preferred address is null" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should not fail if an attribute does not exist" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map identifiers to patient returned by identifiersFactory" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map relationships" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should map patient death details" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).OpenmrsPatientMapper"/>
    <testcase name="should set voided flag when Empty value is selected for concept attribute type(dropdown)" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UpdatePatientRequestMapper"/>
    <testcase name="should set voided flag to false when non empty value is selected for concept attribute type" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UpdatePatientRequestMapper"/>
    <testcase name="should set voided flag to true when blank value is selected for an attribute of concept type" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UpdatePatientRequestMapper"/>
    <testcase name="should filter out empty new identifier objects" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).UpdatePatientRequestMapper map identifiers"/>
    <testcase name="should void the saved identifier when identifier text field is blanked out" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model generate"/>
    <testcase name="should not void the identifier when identifier field is cleared and filled again" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model generate"/>
    <testcase name="should clear registrationNumber and identifier" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model clearRegistrationNumber"/>
    <testcase name="should return true if Enter ID is checked irrespective of whether identifier type is configured as required or not" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model isIdentifierRequired"/>
    <testcase name="should return true if Enter Id is not checked and identifier type can not be auto generated " time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model isIdentifierRequired"/>
    <testcase name="should return false if Enter Id is not checked but identifier type can be auto generated " time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model isIdentifierRequired"/>
    <testcase name="hasIdentifierSources, should return false if identifier sources are not present" time="0.01" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model hasIdentifierSources"/>
    <testcase name="hasIdentifierSources, should return true if identifier sources are present" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model hasIdentifierSources"/>
    <testcase name="should return true if there is only one identifier source with blank prefix" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model hasIdentifierSourceWithEmptyPrefix"/>
    <testcase name="should return true if there is only one identifier source with null prefix" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model hasIdentifierSourceWithEmptyPrefix"/>
    <testcase name="should return false if there is only one identifier source without a blank prefix" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model hasIdentifierSourceWithEmptyPrefix"/>
    <testcase name="should map identifiers for all identifier types and initialise empty identifier if it does not exit for an identifier type" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model map"/>
    <testcase name="should map identifier with saved values" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifier Model map"/>
    <testcase name="should map identifierPrefix and hasOldIdentifier from preferences for primary identifier" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifiers create identifiers"/>
    <testcase name="should map first identifierPrefix found if it is not specified in preferences for primary identifier" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifiers create identifiers"/>
    <testcase name="should map first identifierPrefix found for extra identifiers" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Identifiers create identifiers"/>
    <testcase name="should update age as difference between dateofBirth and today in years, months and days" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient calculateAge"/>
    <testcase name="should update age as difference between dateofBirth and today in years, months and days" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient calculateAge"/>
    <testcase name="should be combination of givenNameLocal and familyNameLocal" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should not have extra whitespaces when there is whitespace around givenNameLocal" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should not have extra whitespaces when there is whitespace around familyNameLocal" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should be empty when givenNameLocal and familyNameHindi is not available" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should be just givenNameLocal when familyNameLocal is not available" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should be just familyNameLocal when givenNameLocal is not available" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient fullNameLocal"/>
    <testcase name="should assign identifiers created by identifiers factory to patient" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient create identifiers"/>
    <testcase name="should get attributeTypes by UUID" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="should add autocomplete config for caste" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="should return heathCentreAttribute" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="should set showNameField to be false if attribute does not given or middle or family local name" time="0" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="should get the patientAttributeSections through key as section name" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="should get the ordered patientAttributeSections" time="0.001" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).PatientConfig"/>
    <testcase name="Should get list of addresses from address hierarchy service" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).addressHierarchyService search"/>
    <testcase name="Should parse the searchString for Chrome app, if searchString contains parenthesis" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).addressHierarchyService search"/>
    <testcase name="should map address field to value and label for fields with parent" time="0.005" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).addressHierarchyService getAddressDataResults"/>
    <testcase name="should map address field to value and label for fields without parent" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).addressHierarchyService getAddressDataResults"/>
    <testcase name="should map address field to value and label for fields with blank parent and grand parent" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).addressHierarchyService getAddressDataResults"/>
    <testcase name="should update the patient name" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientServiceStrategy test Update()"/>
    <testcase name="should create a encounter" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should build encounter with provider from rootscope if there are no providers in encounter and cookie store" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should build encounter with provider from cookie store if there are no providers in encounter" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not update providers if it is already present in encounter data" time="0.002" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should get encounter type as program encounter type if program uuid is given" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should set encounter type as default encounter type if there is no mapping for program encounter type" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should get encounter type as location encounter type if program uuid is null and location uuid is given" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should set encounter type as default encounter type if there is no mapping for location encounter type" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should get default encounter type if both program uuid and location uuid are null" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should getEncountersForEncounterType be called with id,uuid,obsDatetime,value,comment to get the obs with those params in the encounters" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should call URL to delete file if Video or Image obs are voided" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if Video or Image obs are not voided" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if Video or Image obs does not have groupMembers" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if Video or Image obs have groupMembers with length as non zero" time="0.014" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if Video or Image obs if value is empty or null or undefined" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if obs concept Class is not Video Or Image" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="should not call URL to delete file if any Obs other than Video or Image are voided" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).EncounterService"/>
    <testcase name="Should get unique list of family names" time="0.003" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientAttributeService search"/>
    <testcase name="Should get unique list of caste" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientAttributeService search"/>
    <testcase name="Should trim leading whitespaces" time="0.004" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).patientAttributeService search"/>
    <testcase name="Should call url for search" time="0.006" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient resource"/>
    <testcase name="should make network call to serach by patient name or identifier for given query string and limit" time="0.009" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient resource"/>
    <testcase name="Should create a patient" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient resource"/>
    <testcase name="should get patients by uuid" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).Patient resource"/>
    <testcase name="should initialize with scheduled reports" time="0.017" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should return the download link with id" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should convert unixTimeStamps to given format" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should get corresponding format for mimeType" time="0.011" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should search reports by name" time="0.048" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should hide days if all reports are hidden for that day" time="0.03" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should show all reports when search by empty string" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should show a dialog" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should delete report" time="0.015" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="should show error if not able to delete the report" time="0.012" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).MyReportsController"/>
    <testcase name="initializes report sets based on whether date range required or not" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should initialise formats based on the supportedFormats config" time="0.013" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should initialise all available formats when supportedFormats config is not specified" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="setDefault sets the right defaults based on section" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="converts dates to string format before sending to reportService" time="0.008" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should generate report without dates if the report does not require date range" time="0.007" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="show an error message when report which requires date range is initialized without both start date and end date" time="0.032" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="show an error message when report which requires date range is initialized without start date" time="0.02" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="show an error message when report which requires date range is initialized without end date" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="show an error message when format is not selected" time="0.022" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should not generate report when macro template is not selected for custom excel" time="0.026" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should reset report template after generating custom excel" time="0.053" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should send macroTemplate File path if macroTemplate is configured" time="0.028" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="show an error message when csv format is selected for concatenated reports" time="0.027" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should call scheduleReports if report is scheduled and succeeds" time="0.034" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should call scheduleReports if report is scheduled and show error" time="0.018" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <testcase name="should persist the previously set startDate, stopDate and format when redirecting between MyReports and Reports Tab" time="0.047" classname="unit Firefox 64.0.0 (Ubuntu 0.0.0).ReportsController"/>
    <system-out><![CDATA[Firefox 64.0.0 (Ubuntu 0.0.0) WARN: 'Deprecation warning: value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.
Arguments: 
[0] _isAMomentObject: true, _isUTC: false, _useUTC: false, _l: undefined, _i: Mon Dec 17 2018 18:29:37 GMT+0600 (Bangladesh Standard Time), _f: undefined, _strict: undefined, _locale: [object Object]
x/<@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:3248
gb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:19734
rb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:22824
qb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:22691
pb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:22410
sb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:23150
tb@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:23184
a@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:199
getDateTimeInSpecifiedFormat@http://localhost:9876/base/app/common/util/dateUtil.js?2245750e4302327856c46159e69407f8fe18803b:9:15912
getTime@http://localhost:9876/base/app/appointments/models/appointmentService.js?71aa2488d1cfae3780b6a94b6467b9485dc7dcb8:9:790
Bahmni.Appointments.AppointmentService</Service.createFromUIObject@http://localhost:9876/base/app/appointments/models/appointmentService.js?71aa2488d1cfae3780b6a94b6467b9485dc7dcb8:9:2372
@http://localhost:9876/base/test/unit/appointments/controllers/admin/appointmentServiceController.spec.js?421970d319009f4536a9e92fa448a2ace32f0ea4:243:27
attemptSync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1510:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1498:9
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Suite.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1694:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Suite.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1694:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
'
,Firefox 64.0.0 (Ubuntu 0.0.0) WARN: 'Deprecation warning: moment().subtract(period, number) is deprecated. Please use moment().subtract(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
,Firefox 64.0.0 (Ubuntu 0.0.0) WARN: 'Deprecation warning: moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/
Arguments: 0
x/<@http://localhost:9876/base/app/components/moment/min/moment.min.js?32fdf6730be34538e09378ec6cc55229d9a70151:6:3248
fb[b]@http://localhost:9876/base/app/components/fullcalendar/dist/fullcalendar.min.js?dbb1a61929f13d4902a98a7343e2c63d5d2a8500:6:29286
@http://localhost:9876/base/test/unit/registration/mappers/openmrsPatientMapper.spec.js?89d6a64e9bbf762787e54d0f3ed0284325e2235b:179:37
attemptSync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1510:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1498:9
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Suite.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1694:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Suite.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1694:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Spec.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:306:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
QueueRunner.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1485:5
queueRunnerFactory@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:518:35
Suite.prototype.execute@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1694:5
wrapChildAsAsync/<@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1708:31
attemptAsync@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1520:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1496:16
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1703:9
clearStack@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:506:9
QueueRunner.prototype.run@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1505:7
next@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:1517:32
complete@http://localhost:9876/base/node_modules/karma-jasmine/lib/jasmine.js?dc3780c73c9598d515a7f1911078142f3f4b029e:333:9
'

]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
